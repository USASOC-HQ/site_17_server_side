<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2022-09-23 02:47:33">
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Table of Contents Input Variables Prompt #1: Short Description Prompt #2: Network Prompt #3: Productivity</meta_description>
<number>KB0101019</number>
<published>2022-09-22</published>
<rating/>
<retired/>
<roles/>
<short_description>Site 17 Incident Record Producer</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-22 21:26:28</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>3625bf561bc6d5101497a820f54bcb15</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-22 21:53:30</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdjhgfo6gb" rel="nofollow">Input Variables</a><br />
<ul><li><a href="#mcetoc_1gdjhgfo6gc" rel="nofollow">Prompt #1: Short Description</a></li><li><a href="#mcetoc_1gdjhgfo6gd" rel="nofollow">Prompt #2: Network</a></li><li><a href="#mcetoc_1gdjhgfo6ge" rel="nofollow">Prompt #3: Productivity Impact</a></li><li><a href="#mcetoc_1gdjhgfo6gf" rel="nofollow">Prompt #4: Pervasiveness</a></li><li><a href="#mcetoc_1gdjhgfo6gg" rel="nofollow">Prompt #5: Category</a></li><li><a href="#mcetoc_1gdjhgfo6gh" rel="nofollow">Prompt #6: Mission-Related</a></li><li><a href="#mcetoc_1gdjhgfo6gi" rel="nofollow">Prompt #7: Details</a></li><li><a href="#mcetoc_1gdjhgfo6gj" rel="nofollow">Prompt #8: On behalf of</a></li></ul>
</li><li><a href="#mcetoc_1gdjhgfo6gk" rel="nofollow">Impact, Urgency and Priority Logic</a></li></ul>
</div>
<h1 id="mcetoc_1gdjhgfo6gb">Input Variables</h1>
<h2 id="mcetoc_1gdjhgfo6gc">Prompt #1: Short Description</h2>
<p>In the field labeled &#34;Briefly describe what is wrong&#34;, the user provides a short description of the incident.</p>
<h2 id="mcetoc_1gdjhgfo6gd">Prompt #2: Network</h2>
<p>The user can select a network in the field labeled &#34;Please select the associated network, if applicable&#34;. This is a lookup field (technically called a &#34;reference&#34; field) that gets its choices from the &#34;Site 17 Network Circuit&#34; table.</p>
<h2 id="mcetoc_1gdjhgfo6ge">Prompt #3: Productivity Impact</h2>
<p>The field labeled &#34;What affect does this have on productivity?&#34; is a 4-tiered rating with lower values being the most severe and a zero-value representing an unspecified rating. The user selects one of the following options to indicate the productivity impact with corresponding rating values:</p>
<ol style="list-style-position: inside;" start="0"><li>Unspecified / Unknown</li><li>Complete work stoppage</li><li>Partial work stoppage</li><li>Effects execution of time-sensitive activities</li><li>Currently using a work-around / alternate method to perform affected duties</li></ol>
<h2 id="mcetoc_1gdjhgfo6gf">Prompt #4: Pervasiveness</h2>
<p>In the field labeled &#34;How widespread is this incident?&#34; is also a 4-tiered rating with lower values being the most severe and a zero-value representing an unspecified rating. The user selects one of the following options that correspond to the rating value:</p>
<ol style="list-style-position: inside;" start="0"><li>Unspecified / Unknown</li><li>More than 100 people</li><li>50 to 100 people</li><li>10 to 49 people</li><li>Less than 10 people</li></ol>
<h2 id="mcetoc_1gdjhgfo6gg">Prompt #5: Category</h2>
<p>The field labeled &#34;If known, please select the incident category&#34; is a direct mapping to the incident &#34;Category&#34; field.</p>
<h2 id="mcetoc_1gdjhgfo6gh">Prompt #6: Mission-Related</h2>
<p>The user indicates whether the incident is mission-related in the field labeled &#34;Is this mission-related?&#34;.</p>
<h2 id="mcetoc_1gdjhgfo6gi">Prompt #7: Details</h2>
<p>The user can optionally give a more detailed description of the incident using the field labeled &#34;If necessary, you can provide more detailed description of the incident, here&#34;.</p>
<h2 id="mcetoc_1gdjhgfo6gj">Prompt #8: On behalf of</h2>
<p>If the user is submitting an incident on behalf of someone else, they can use the field with the label &#34;If this is being submitted on behalf of someone else, you can select the person here; otherwise, you can leave this blank&#34;.</p>
<p>Prompt #9: Routing</p>
<p>The field labeled &#34;Managed by Site 17&#34; is a checkbox that indicates whether the incident should be routed to the Site 17 service desk instead of the service desk of the hosting organization. By default, this is checked.</p>
<p>At the time this KB article was written, this field did not have any effect on the automatic incident routing. The primary purpose of this field (variable) was to provide a means to more easily distinguish incidents that should be handled by Site 17 from other incidents in the larger system incident queue.</p>
<h1 id="mcetoc_1gdjhgfo6gk">Network Selection Mapping</h1>
<p>The &#34;Site 17 Network Circuit&#34; has a field labeled &#34;Choice Value&#34; (name: choice_value), which contains the value that get applied to the &#34;Network&#34; field of the request record.</p>
<h1>Impact, Urgency and Priority Logic</h1>
<p>The <a title="Incident (Site 17) record producer" href="/sc_cat_item_producer.do?sys_id&#61;045d9b221bed5550ec0320efe54bcb9a" target="_blank" rel="noopener noreferrer nofollow">Incident (Site 17) record producer</a> has a script which calculates the impact and urgency field values for the incident record using the productivity impact and pervasiveness rating values they selected. If they indicated that it is mission related, this will lend toward a higher prioritization as well as whether their profile is flagged as VIP. The final priority value is automatically calculated according to the current system configuration. Following is a matrix that shows how the various selections and conditions correspond to the urgency and impact for the new incident record:</p>
<table style="border-collapse: collapse;" border="1"><tbody><tr><td>Productivity Impact</td><td>Pervasiveness</td><td>Mission Related</td><td>VIP</td><td>Impact</td><td>Urgency</td></tr><tr><td style="color: red;">1</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: slategray;">0</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: slategray;">0</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: red;">1</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: slategray;">0</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: red;">1</td></tr><tr><td style="color: blue;">3</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: blue;">2</td></tr><tr><td style="color: red;">1</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: red;">1</td></tr><tr><td style="color: red;">1</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: red;">1</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: red;">1</td></tr><tr><td style="color: blue;">3</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: blue;">3</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: red;">1</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: red;">1</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: red;">1</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: slategray;">0</td><td style="color: red;">1</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: red;">1</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: blue;">2</td></tr><tr><td style="color: darkorange;">2</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: blue;">2</td></tr><tr><td style="color: darkorange;">2</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: blue;">3</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkorange;">2</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: blue;">3</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: blue;">3</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkorange;">2</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: blue;">2</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: blue;">2</td></tr><tr><td style="color: blue;">3</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: slategray;">0</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: red;">Yes</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkorange;">2</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: blue;">2</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: blue;">3</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: blue;">3</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: blue;">3</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkslategray;">4</td><td style="color: red;">Yes</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: blue;">3</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: darkslategray;">4</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: slategray;">0</td><td style="color: blue;">3</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: slategray;">0</td><td style="color: darkslategray;">4</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr><tr><td style="color: slategray;">0</td><td style="color: slategray;">0</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">No</td><td style="color: darkslategray;">3</td><td style="color: darkslategray;">3</td></tr></tbody></table>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Main API for the Site 17 Multimedia Services application. Table of Contents Sources Methods getDefaultMinLeadTimeDays</meta_description>
<number>KB0101017</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>Site17MMServicesUtil API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 20:29:05</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>2127ba8a1bc2d510ec0320efe54bcb69</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 21:05:58</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Main API for the Site 17 Multimedia Services application.</p>
<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgtnrn33o" rel="nofollow">Sources</a></li><li><a href="#mcetoc_1gdgtnrn33p" rel="nofollow">Methods</a><br />
<ul><li><a href="#mcetoc_1gdgtnrn33q" rel="nofollow">getDefaultMinLeadTimeDays (async)</a></li><li><a href="#mcetoc_1gdgtnrn33r" rel="nofollow">getNextAvailableTimeSlot (async)</a><br />
<ul><li><a href="#mcetoc_1gdgtnrn33s" rel="nofollow">Asynchronous Parameters</a></li><li><a href="#mcetoc_1gdgtnrn33t" rel="nofollow">Response Element</a></li></ul>
</li><li><a href="#mcetoc_1gdgtnrn33u" rel="nofollow">getAvailabilitiesInRange (async)</a><br />
<ul><li><a href="#mcetoc_1gdgtnrn33v" rel="nofollow">Asynchronous Parameters</a></li><li><a href="#mcetoc_1gdgtnrn340" rel="nofollow">Response Element</a></li></ul>
</li><li><a href="#mcetoc_1gdgtnrn341" rel="nofollow">getDefaultMinLeadTimeDays</a></li><li><a href="#mcetoc_1gdgtnrn342" rel="nofollow">getReservationTypeSysId</a></li><li><a href="#mcetoc_1gdgtnrn343" rel="nofollow">getReservationScheduler</a></li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgtnrn33o">Sources</h1>
<ul style="list-style-position: inside;"><li><a title="Script Include" href="/sys_script_include.do?sys_id&#61;ca9146832fd0111035be56e62799b626" rel="nofollow">Script Include</a></li><li><a title="TypeScript (GitHub)" href="https://github.com/USASOC-HQ/site_17_mmservices/blob/main/source/api/Site17MMServicesUtil.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="mcetoc_1gdgtnrn33p">Methods</h1>
<h2 id="mcetoc_1gdgtnrn33q">getDefaultMinLeadTimeDays (async)</h2>
<p>Gets the number of days the default minimum lead time for appointments.</p>
<p>Asyncrhonous response: The number of days the default minimum lead time for appointments.</p>
<h2 id="mcetoc_1gdgtnrn33r">getNextAvailableTimeSlot (async)</h2>
<p>Gets the next available time slot.</p>
<h3 id="mcetoc_1gdgtnrn33s">Asynchronous Parameters</h3>
<ul style="list-style-position: inside;"><li><strong><var>sys_parm_from</var></strong>: The date and time to start from.</li><li><strong><var>sys_parm_to</var></strong>: The optional end date and time to search within.</li><li><strong><var>sys_parm_duration</var></strong> (optional): The minimum appointments duration in minutes.</li><li><strong><var>sys_parm_include</var></strong> (optional): The list of comma-separated result inclusions. Values for result inclusions are:<br />
<ul style="list-style-position: inside;"><li><code class="language-javascript">&#34;all&#34;</code>: Includes all additional properties.</li><li><code class="language-javascript">&#34;group&#34;</code>: Includes <var>assignment_group</var> and <var>approval_group</var> properties.</li><li><code class="language-javascript">&#34;approval_group&#34;</code>: If there is an approval group, the <var>sys_id</var> will be contained in the <var>approval_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;assignment_group&#34;</code>: The <var>sys_id</var> of the assignment group will be contained in the <var>assignment_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;durations&#34;</code>: Includes <var>duration_increment</var>, <var>minimum_duration</var>, <var>maximum_duration</var> and <var>start_time_interval</var> properties.</li><li><code class="language-javascript">&#34;duration_increment&#34;</code>: The number of minutes for duration increments will be contained in the <var>duration_increment</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;minimum_duration&#34;</code>: The minimum number of minutes for durations will be contained in the <var>minimum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;maximum_duration&#34;</code>: The maximum number of minutes for durations will be contained in the <var>maximum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;start_time_interval&#34;</code>: The number of minutes for start time intervals will be contained in the <var>start_time_interval</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;default_min_lead_time&#34;</code>: The number of days for the default minimum lead time for appointments.</li></ul>
</li></ul>
<h3 id="mcetoc_1gdgtnrn33t">Response Element</h3>
<ul style="list-style-position: inside;"><li><strong><var>availability</var></strong>: This element contains the availability response with the following attributes:<br />
<ul style="list-style-position: inside;"><li><strong><var>success</var></strong>: Contains the value <code class="language-javascript">&#34;true&#34;</code> if there was an availability; otherwise, it will contain <code class="language-javascript">&#34;false&#34;</code>.</li><li><strong><var>startDateTime</var></strong>: Contains the start date and time of the next availability if there was an availability; otherwise, this attribute will not be present.</li><li><strong><var>durationMinutes</var></strong>: Contains the number of contiguous minutes that are open for reservation if there was an availability; otherwise, this attribute will not be present.</li></ul>
</li></ul>
<h2 id="mcetoc_1gdgtnrn33u">getAvailabilitiesInRange (async)</h2>
<p>Gets the reservation availabilities within a given date and time range.</p>
<h3 id="mcetoc_1gdgtnrn33v">Asynchronous Parameters</h3>
<ul style="list-style-position: inside;"><li><strong><var>sys_parm_from</var></strong>: The date and time to start from.</li><li><strong><var>sys_parm_to</var></strong>: The end date and time to search within.</li><li><strong><var>sys_parm_allow_inactive</var></strong> (optional): Boolean value indicating whether to allow inactive reservation types.</li><li><strong><var>sys_parm_duration</var></strong> (optional): The minimum reservation duration in minutes.</li><li><strong><var>sys_parm_include</var></strong> (optional): The list of comma-separated result inclusions. Values for result inclusions are:<br />
<ul style="list-style-position: inside;"><li><code class="language-javascript">&#34;all&#34;</code>: Includes all additional properties.</li><li><code class="language-javascript">&#34;group&#34;</code>: Includes <var>assignment_group</var> and <var>approval_group</var> properties.</li><li><code class="language-javascript">&#34;approval_group&#34;</code>: If there is an approval group, the <var>sys_id</var> will be contained in the <var>approval_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;assignment_group&#34;</code>: The <var>sys_id</var> of the assignment group will be contained in the <var>assignment_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;durations&#34;</code>: Includes <var>duration_increment</var>, <var>minimum_duration</var>, <var>maximum_duration</var> and <var>start_time_interval</var> properties.</li><li><code class="language-javascript">&#34;duration_increment&#34;</code>: The number of minutes for duration increments will be contained in the <var>duration_increment</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;minimum_duration&#34;</code>: The minimum number of minutes for durations will be contained in the <var>minimum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;maximum_duration&#34;</code>: The maximum number of minutes for durations will be contained in the <var>maximum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;start_time_interval&#34;</code>: The number of minutes for start time intervals will be contained in the <var>start_time_interval</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;default_min_lead_time&#34;</code>: The number of days for the default minimum lead time for appointments.</li></ul>
</li></ul>
<h3 id="mcetoc_1gdgtnrn340">Response Element</h3>
<ul style="list-style-position: inside;"><li><strong><var>availabilities</var></strong>: Contains the availabilities that were found. The <code class="language-javascript">length</code> attribute contains the number of availabilities found.<br />
<ul style="list-style-position: inside;"><li><strong><var>availability</var></strong>: One or more nested attributes representing individual date/time ranges open for reservation, with the following attributes:<br />
<ul style="list-style-position: inside;"><li><strong><var>startDateTime</var></strong>: the start date and time.</li><li><strong><var>durationMinutes</var></strong>: the number of contiguous minutes that are open for reservation.</li></ul>
</li></ul>
</li></ul>
<h2 id="mcetoc_1gdgtnrn341">getDefaultMinLeadTimeDays</h2>
<p>Gets the number of days the default minimum lead time for appointments.</p>
<p>The value returned by this method is stored in the &#39;x_44813_mmservices.default_min_leadTime_days&#39; system property, with a default value of 3.</p>
<pre class="language-javascript"><code>getDefaultMinLeadTimeDays(): number;</code></pre>
<p>Returns the number of days the default minimum lead time for appointments.</p>
<h2 id="mcetoc_1gdgtnrn342">getReservationTypeSysId</h2>
<p>Gets the SysId of the associated &#39;Reservation Type&#39; record.</p>
<p>The value returned by this method is stored in the &#39;x_44813_mmservices.reservation_type&#39; system property.</p>
<pre class="language-javascript"><code>getReservationTypeSysId(): string | undefined;</code></pre>
<p>Returns the SysId of the associated record in the &#39;Reservation Type&#39; table (x_g_inte_site_17_reservation_type) or <code class="language-typescript">undefined</code> if the associated system property is empty or set set.</p>
<h2 id="mcetoc_1gdgtnrn343">getReservationScheduler</h2>
<p>Gets the ReservationScheduler instance associated with this app.</p>
<pre class="language-javascript"><code>getReservationScheduler(): x_g_inte_site_17.ReservationScheduler;</code></pre>
<p>Returns the ReservationScheduler instance associated with this app.</p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Request system for MultiMedia services. The implementation of this app has not yet been completed. Application</meta_description>
<number>KB0101016</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>Site 17 Multimedia Services Application</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-12 16:32:23</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>eadaa3871bb119101497a820f54bcb0f</sys_id>
<sys_mod_count>7</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 21:40:03</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Request system for MultiMedia services. The implementation of this app has not yet been completed.</p>
<h1>Application Settings</h1>
<ul style="list-style-position: inside;"><li><strong>Minimum Lead Time (days)</strong> <em>(system name: default_min_leadTime_days)</em>: This is the default value for the minimum number of days between request submission and expected completion.</li><li><strong>Reservation Type Sys ID</strong> <em>(system name: resevation_type)</em>: This is the Sys ID of the record in the Reservation Types (x_g_inte_site_17_reservation_type) table that defines scheduling parameters.</li></ul>
<h1>Variable Set: Site 17 MultiMedia Service Request</h1>
<p>This contains variables that are common to all Site 17 Multimedia Services request items.</p>
<ul style="list-style-position: inside;"><li><strong>Contact Phone Number</strong> <em>(system name: contact_phone_number)</em>: Contact phone number is required. If the user profile has a phone number, this field will be auto-populated.</li><li><strong>Unit / Section</strong> <em>(system name: unit_or_section)</em>: Unit or Section of requestor is required. A client script will attempt to auto-populate this field.</li><li><strong>Needed By</strong> <em>(system name: needed_by)</em>: Optional needed-by date.</li><li><strong>Requested Urgency</strong> <em>(system name: requested_urgency)</em>: Rating to indicate how strictly the needed-by date must be met. Options are:<br />
<ol style="list-style-position: inside;"><li>High - Needed By date is absolute.</li><li>Medium - Delivery date can be negotiated.</li><li>Low - deliver by expected date or best effort.</li></ol>
</li><li><strong>Importance</strong> <em>(system name: importance)</em>: Importance rating value. Options are:<br />
<ol style="list-style-position: inside;"><li>High - Mission critical or Highly Consequential</li><li>Medium - Mission-Related or High End-Product Visiblity</li><li>Low - Not Mission-Related or Limited End-Product Visibility</li></ol>
</li><li><strong>Justification</strong> <em>(system name: justification)</em>: Justification for elevated priority. This is required if Importance is set to &#39;High&#39; or Requested Urgency is not &#39;Low&#39;.</li></ul>
<h1>Server-Side Script Include</h1>
<ul style="list-style-position: inside;"><li>This application has a single server-side script include named <a title="Site17MMServicesUtil" href="/kb_view.do?sysparm_article&#61;KB0101017" rel="nofollow">Site17MMServicesUtil</a>.</li><li>This application also has a dependency on the <a title="&#34;Site 17&#34; application" href="/kb_view.do?sysparm_article&#61;KB0101015" rel="nofollow">&#34;Site 17&#34; application</a> and some of it&#39;s script includes.</li></ul>
<h1>To be done</h1>
<ul style="list-style-position: inside;"><li>Create a settings edit page.</li><li>Complete integration with the ReservationScheduler API from the &#34;Site 17&#34; scoped application.</li><li>Determine if the &#34;Site 17 Multimedia Services Hours&#34; is still needed or if its usage needs to be modified. This is related to the previous bullet point.</li><li>Delete catalog items and the &#34;Require 2x2 if passport&#34; UI policy. Individual catalog items and specialized UI policies will be created as needed in production, outside the scope of this app.</li></ul>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Table of Contents Service Catalog Support Hardware Requests Generic Requests Incident Record Producer</meta_description>
<number>KB0101015</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>Site 17 Scoped Application Overview</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-23 19:05:50</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>766584781ba99d101497a820f54bcb37</sys_id>
<sys_mod_count>17</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-23 02:46:15</sys_updated_on>
<sys_view_count>5</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gcpabv101al" rel="nofollow">Service Catalog Support</a><br />
<ul><li><a href="#mcetoc_1gdjia3c42" rel="nofollow">Hardware Requests</a></li><li><a href="#mcetoc_1gdjia3c43" rel="nofollow">Generic Requests</a></li><li><a href="#mcetoc_1gcpabv101am" rel="nofollow">Incident Record Producer</a></li></ul>
</li><li><a href="#mcetoc_1gcpabv101an" rel="nofollow">Schedules</a><br />
<ul><li><a href="#mcetoc_1gcpabv101ao" rel="nofollow">Holiday Schedules</a></li><li><a href="#mcetoc_1gcpabv101ap" rel="nofollow">General Working Hours Schedules</a></li><li><a href="#mcetoc_1gcpabv101aq" rel="nofollow">UM/CIV Working Hours Schedules</a></li></ul>
</li><li><a href="#mcetoc_1gcpabv101ar" rel="nofollow">APIs (Script Includes)</a></li><li><a href="#mcetoc_1gcpabv101as" rel="nofollow">Tables</a><br />
<ul><li><a href="#mcetoc_1gcpabv101at" rel="nofollow">Site 17 Network Circuit (x_g_inte_site_17_site_17_network_circuit)</a></li><li><a href="#mcetoc_1gcpabv101au" rel="nofollow">Squadron Options (x_g_inte_site_17_squadron_options)</a></li><li><a href="#mcetoc_1gcpabv101av" rel="nofollow">Reservation Type (x_g_inte_site_17_reservation_type)</a></li><li><a href="#mcetoc_1gcpabv101b0" rel="nofollow">Location Approvers (x_g_inte_site_17_location_approvers)</a></li></ul>
</li><li><a href="#mcetoc_1gcpabv101b1" rel="nofollow">System Properties</a></li></ul>
</div>
<h1 id="mcetoc_1gcpabv101al">Service Catalog Support</h1>
<p>Other than an incident record producer, this application does not contain any actual catalog items. Catalog items will be created on the production instance as needed, and will use the workflows, variable sets and APIs from this application as needed.</p>
<h2 id="mcetoc_1gdjia3c42">Hardware Requests</h2>
<p>This app includes 2 workflows and a variable set that is intended to be used with all hardware request catalog items. See <a title="KB0101014" href="/kb_view.do?sysparm_article&#61;KB0101014" target="_blank" rel="noopener noreferrer nofollow">KB0101014</a> for further information.</p>
<h2 id="mcetoc_1gdjia3c43">Generic Requests</h2>
<p>The workflow named <strong>Site 17 Generic Request</strong> and the corresponding variable set named <strong>Generic Site 17 IT Service Request</strong> is intended to be used with generic non-hardware request items.</p>
<h2 id="mcetoc_1gcpabv101am">Incident Record Producer</h2>
<p>A record producer is included with this application for submitting Site 17-specific incidents. See <a title="KB0101014" href="/kb_view.do?sysparm_article&#61;KB0101019" target="_blank" rel="noopener noreferrer nofollow">KB0101019</a> for details.</p>
<h1 id="mcetoc_1gcpabv101an">Schedules</h1>
<h2 id="mcetoc_1gcpabv101ao">Holiday Schedules</h2>
<ul style="list-style-position: inside;"><li><strong>Site 17 Facility Holidays</strong>: This defines exclusions for holidays that are observed by all personnel.</li><li><strong>Site 17 UM/CIV Holidays</strong>: This schedule defines exclusions for holidays that are observed by unit members and civilians, but not contractors.<br />
<ul style="list-style-position: inside;"><li>This includes entries from the &#39;Site 17 Facility Holidays&#39; schedule.</li></ul>
</li></ul>
<h2 id="mcetoc_1gcpabv101ap">General Working Hours Schedules</h2>
<p>These schedules reference the &#39;Site 17 Facility Holidays&#39; schedule for excluded dates and times.</p>
<ul style="list-style-position: inside;"><li><strong>Site 17 Personnel Hours (8 hours on weekdays)</strong>: Defines 8-hour workdays with 1 hour for lunch, Monday through Friday, except for weekends and holidays.</li><li><strong>Site 17 Core Hours (0900-1400 weekdays)</strong>: Defines the core hours when contractors are normally expected to be at their authorized / assigned work location.</li><li><strong>Site 17 Business Day Facility Hours (0600-1800 weekdays)</strong>: Represents the hours that the Site 17 facility is typically open, Monday through Friday, except for weekends and holidays.</li></ul>
<h2 id="mcetoc_1gcpabv101aq">UM/CIV Working Hours Schedules</h2>
<p>These schedules reference the &#39;Site 17 UM/CIV Holidays&#39; schedule for excluded dates and times.</p>
<ul style="list-style-position: inside;"><li><strong>Site 17 UM/CIV Personnel Hours (8 hours on weekdays)</strong>: Defines 8-hour workdays with 1 hour for lunch, Monday through Friday, except for weekends and holidays observed by military and civilian personnel.</li><li><strong>Site 17 UM/CIV Core Hours (0900-1400 weekdays)</strong>: Defines the core hours when unit members, civilians and contractors are normally expected to be at their authorized / assigned work location. This excludes holidays that are observed by military and civilian personnel.</li><li><strong>Site 17 UM/CIV Business Day Facility Hours</strong>: Represents the hours that the Site 17 facility is typically open, Monday through Friday, except for weekends and holiday observed by military and civilian personnel.</li></ul>
<h1 id="mcetoc_1gcpabv101ar">APIs (Script Includes)</h1>
<p>Technical documentation for each of these APIs is provided along with the source code using <a title="jsdoc" href="https://jsdoc.app/" rel="nofollow">jsdoc</a> notation.</p>
<div>
<ul style="list-style-position: inside;"><li><a title="Site17Util" href="/kb_view.do?sysparm_article&#61;KB0101006" target="_blank" rel="noopener noreferrer nofollow"><strong>Site17Util</strong></a>: Provides general utility methods that reference Site 17 scoped application settings and tables according to their intended purposes.</li><li><a title="ProfileValidator" href="/kb_view.do?sysparm_article&#61;KB0101011" target="_blank" rel="noopener noreferrer nofollow"><strong>ProfileValidator</strong></a>: Server and Client-callable methods for validating user profile compliance.</li><li><a title="DistinguishedNameContext" href="/kb_view.do?sysparm_article&#61;KB0101008" target="_blank" rel="noopener noreferrer nofollow"><strong>DistinguishedNameContext</strong></a>: Gives an Active Directory Distinguished Name context for many record types, including User, Group and Task-based records, to determine if they are associated with a Site 17 user or group that was imported from Active Directory.</li><li><a title="ReservationScheduler" href="/kb_view.do?sysparm_article&#61;KB0101005" target="_blank" rel="noopener noreferrer nofollow"><strong>ReservationScheduler</strong></a>: Provides schedule availability information and adds schedule entries while avoiding conflicts with other existing entries.</li><li><a title="ReservationSchedulerAjax" href="/kb_view.do?sysparm_article&#61;KB0101012" target="_blank" rel="noopener noreferrer nofollow"><strong>ReservationSchedulerAjax</strong></a>: Client-callable methods for the ReservationScheduler API.</li><li><a title="LocationApproval" href="/kb_view.do?sysparm_article&#61;KB0101009" target="_blank" rel="noopener noreferrer nofollow"><strong>LocationApproval</strong></a>: Utility class for determining location and org-based approval groups.</li><li><a title="AtfHelper" href="/kb_view.do?sysparm_article&#61;KB0101007" target="_blank" rel="noopener noreferrer nofollow"><strong>AtfHelper</strong></a>: Helper API for unit tests created within the Automated Test Framework.</li></ul>
<h1 id="mcetoc_1gcpabv101as">Tables</h1>
<h2 id="mcetoc_1gcpabv101at">Site 17 Network Circuit (x_g_inte_site_17_site_17_network_circuit)</h2>
<p>This represents physical networks that are supported by Site 17. This inherits from the base Configuration Item table (cmdb_ci). This was done so with the forward-looking expectation that we would need to create CMDB relationships (i.e. runs-on) with other CIs that would let us be able to know all CIs that would be affected by a specific network-wide outage. Furthermore, it is understood that this table&#39;s inheritance might be changed to something more appropriate using the CI Class Manager. Following are the additional columns that are on this table:</p>
<ul style="list-style-position: inside;"><li><strong>Choice Value</strong> (choice_value): The corresponding value for the &#39;Network&#39; (u_network) choice field on the Incident table. Note! This is the value of the choice option, not the label that is displayed to the user!</li><li><strong>Classification</strong> (classification): The classification string for the maximum classification supported for the network.</li><li><strong>Portion Marking</strong> (portion_marking): The portion marking string to use for the maximum classification of the network.</li></ul>
<h2 id="mcetoc_1gcpabv101au">Squadron Options (x_g_inte_site_17_squadron_options)</h2>
<p>Associates default IT-related approval and assignment groups with squadrons supported by Site 17 using the following columns:</p>
<ul style="list-style-position: inside;"><li><strong>Short Description</strong> (short_description): Short description of the squadron name.</li><li><strong>Assignment Group</strong> (assignment_group): Required field that refers to the Group (sys_user_group) for task-related record assignment.</li><li><strong>Approval Group</strong> (approval_group): Optional field that refers to the Group (sys_user_group) for approvals for the current squadron.</li><li><strong>Inactive</strong> (inactive): Indicates that a squadron option has been deactivated (should not show up in pick lists)</li></ul>
<h2 id="mcetoc_1gcpabv101av">Reservation Type (x_g_inte_site_17_reservation_type)</h2>
<p>This is used by the <a title="ReservationScheduler" href="/kb_view.do?sysparm_article&#61;KB0101005" target="_blank" rel="noopener noreferrer nofollow">ReservationScheduler</a> API to define reservation types, defining constraints for entries that can be added to a specified schedule.</p>
<h2 id="mcetoc_1gcpabv101b0">Location Approvers (x_g_inte_site_17_location_approvers)</h2>
<p>This table represents a reusable set of rules to be used to determine the appropriate approval group based upon the values a user&#39;s location and organizational fields. This was intended to be used within the Hardware Workflow. However, at the time this KB article was created, nothing in the workflow referenced this table, yet. For the sake of time, the Squadron Options table was used instead. The main impediment for utilizing this table was the fact that suitable location definitions and org structure granularity had not yet been fully defined or vetted in production. The <a title="LocationApproval" href="/kb_view.do?sysparm_article&#61;KB0101009" target="_blank" rel="noopener noreferrer nofollow">LocationApproval Script Include</a> utilizes this table.</p>
<h1 id="mcetoc_1gcpabv101b1">Application Settings</h1>
<p>Application settings can be modified through the <a title="Settings module" href="/x_g_inte_site_17_Settings.do" rel="nofollow">Settings module</a> of the Site 17 application menu. The <a title="Site17Util API" href="/kb_view.do?sysparm_article&#61;KB0101004" rel="nofollow">Site17Util API</a> contains methods to read and use these settings. These are the enterprise-wide parameters for Site 17 and it&#39;s dependent units:</p>
<ul style="list-style-position: inside;"><li><strong>Default Knowledge Base Sys ID:</strong> Contains the Sys ID (GUID) of the default Knowledge Base <em>(table: kb_knowledge)</em> for Site 17 users. <em>Internal name: default_knowledge_base.</em></li><li><strong>Fallback Assignment Group for Requests:</strong> Contains the Sys ID (GUID) of the fallback assignment group <em>(table: sys_user_group)</em> for requests. <em>Internal name: generic_request_assignment_group.</em></li><li><strong>Validated User Profile Columns:</strong> A comma-separated list of the user profile column names <em>(table: sys_user)</em> that the ProfileValidator API checks for compliance. <em>Internal name: profile_compliance_check_columns.</em></li><li><strong>User Profile Phone Number Columns:</strong> A comma-separated, ordered list of user profile column names <em>(table: sys_user)</em> which the ProfileValidator API references to determine the primary phone number of a user. <em>Internal name: profile_phone_columns.</em></li><li><strong>Site 17 Groups Active Directory Container Distinguished Name:</strong> The Distinguished Name for the parent Active Directory container (OU) of all Site 17 groups <em>(table: sys_user_group)</em>. <em>Internal name: source_dn_groups.</em></li><li><strong>Include Groups with Empty Source Column:</strong> If set to &#39;true&#39;, then all ServiceNow groups <em>(table: sys_user_group)</em> with an empty Source property (not imported from AD) are considered to be Site 17 groups. This is intended for use in development and testing environments. <em>Internal name: source_group_include_empty.</em></li><li><strong>Site 17 Users Active Directory Container Distinguished Name:</strong> The Distinguished Name for the parent Active Directory container (OU) of all Site 17 user accounts <em>(table: sys_user)</em>. <em>Internal name: source_dn_users.</em></li><li><strong>Include Users with Empty Source Column:</strong> If set to &#39;true&#39;, then all user records <em>(table: sys_user)</em> with an empty Source property (not imported from AD) are considered to be Site 17 users. This is intended for use in development and testing environments. <em>Internal name: source_user_include_empty.</em></li></ul>
</div>
<h1>Post-Deployment Configuration</h1>
<p>The following items must be configured and/or validated after deployment:</p>
<h2>Application Settings</h2>
<p>Open the <a title="Settings Page" href="/x_g_inte_site_17_Settings.do" target="_blank" rel="noopener noreferrer nofollow">Settings Page</a> the &#34;Site 17&#34; application menu and configure the application settings as instructed.</p>
<h2>Network Circuits</h2>
<p>Open the <a title="&#34;Site 17 Network Circuits&#34; listing" href="/x_g_inte_site_17_site_17_network_circuit_list.do" target="_blank" rel="noopener noreferrer nofollow">&#34;Site 17 Network Circuits&#34; listing</a> from the &#34;Site 17&#34; application menu to add or modify the listing of network options. Refer to the information in the table section above for important information about the column values for this table.</p>
<h2>Squadron Options</h2>
<p>Open the &#34;Squadron Options&#34; listing from the &#34;Site 17&#34; application menu to add or modify the listing of options that will be available for hardware request items.</p>
<h2>Service Catalog</h2>
<h3>Categories</h3>
<p>This application does not come with any Service Catalog categories; therefore, the appropriate categories will need to be created.</p>
<h3>Incident Producer</h3>
<p>Add the record producer named &#34;Incident (Site 17)&#34; to the appropriate category.</p>
<h3>Hardware Catalog Items</h3>
<p>For hardware catalog items, use the &#34;Site 17 Hardware Request&#34; workflow for the execution engine, and add the variable set, also named &#34;Site 17 Hardware Request&#34;. If you wish to override the assignment group for request items, use the &#34;Fulfillment Group&#34; field of the catalog item; otherwise, the workflow will use the assignment group defined in the &#34;Squadron Options&#34; table for the squadron that the requestor selects.</p>
<h3>Other Request</h3>
<p>Create a catalog item for &#34;Other&#34; request. Use the &#34;Site 17 Generic Request&#34; workflow and add the variable set named &#34;Generic Site 17 IT Service Request&#34;.</p>
<h3>Catalog Item Availability</h3>
<p>Ensure service catalogs item are configured to be available for Site 17 users and not to other users.</p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>General flow description During the lifecycle of the request, there is a 'State' field as well as a 'Stage'</meta_description>
<number>KB0101014</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>Site 17 Hardware Requests</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-23 19:55:36</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>26fe813c1b6d9d101497a820f54bcb94</sys_id>
<sys_mod_count>4</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 19:54:30</sys_updated_on>
<sys_view_count>5</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<h2>General flow description</h2>
<p>During the lifecycle of the request, there is a &#39;State&#39; field as well as a &#39;Stage&#39; field that indicates the status of the request. The &#39;State&#39; field is controlled by the fulfiller to update the overall status. The &#39;Stage&#39; field is controlled by the workflow and reflects the overall stage in the lifecycle of the request from submission through approval, fulfillment and closure.</p>
<ol style="list-style-position: inside;"><li>Requestor submits a hardware request, which includes selecting their squadron from a choice field.</li><li>Workflow enters the &#39;Waiting for Approval&#39; stage, and approvals are generated according to the squadron select.</li><li>Upon approval, the workflow enters the &#39;Approved&#39; stage, and the request item is assigned to the fulfiller.</li><li>The fulfiller either changes the &#39;Status&#39; field to &#39;In Progress&#39; or checks the &#39;Backordered&#39; box to indicate that the item is on backorder.<br />
<ul style="list-style-position: inside;"><li>Once the fulfiller changes the &#39;Status&#39; field to &#39;In Progress&#39; or &#39;Pending&#39;, the workflow enters the &#39;Fulfillment&#39; stage.</li><li>If the fulfiller marks the request item as &#39;Backordered&#39;, the workflow will enter the &#39;Backordered&#39; stage and will return to the &#39;Fulfillment&#39; stage once the &#39;Backordered&#39; checkbox is cleared.</li></ul>
</li><li>The workflow completes after the fulfiller changes the &#39;Status&#39; field to one of the &#39;Closed&#39; options.</li></ol>
<h2>Catalog Item Configuration</h2>
<ul style="list-style-position: inside;"><li><strong>Process Engine:</strong> Use the &#39;Site 17 Hardware Request&#39; workflow.</li><li><strong>Variable Set:</strong> Use the &#39;Site 17 Hardware Request&#39; variable set.</li><li><strong>Fulfillment Group:</strong> Use this to override the assignment group. If this is blank, then the assignment group is determined by the squadron that the requestor selects.</li></ul>
<h2>Squadron Options</h2>
<p>The &#39;Squadron Options&#39; table contains entries which defines the squadrons that the user can select. Each record in this table has the following fields:</p>
<div>
<ul style="list-style-position: inside;"><li><strong>Short description</strong>: This is the name of the squadron.</li><li><strong>Approval group</strong>: This defines which ServiceNow group must approve hardware requests for the respective squadron. This can be left empty for automatic approval.</li><li><strong>Assignment group</strong>: This defines which ServiceNow group the request item gets assigned to when the &#39;Fulfillment Group&#39; field is empty on the catalog item.</li><li><strong>Inactive</strong>: This can be set to &#39;true&#39; to make an option unavailable without deleting it.</li></ul>
<h2>Hardware Request Form Fields</h2>
<ul style="list-style-position: inside;"><li><strong>Contact Phone Number</strong>: The requestor is required to provide a contact phone number. If the user has a phone number associated with their ServiceNow profile, it will be auto-populated.</li><li><strong>When is this item needed?</strong>: This is an optional field where the requestor may request a specific suspense date. The requestor will be forbidden from selecting a date in the past.</li><li><strong>Network</strong>: This is an optional field where the requestor can indicate the target network, if applicable.</li><li><strong>Which squadron handles approvals for your unit?</strong>: The requestor is required to select their squadron. The selections for this field come from the &#34;Squadron Options&#34; table.</li><li><strong>Who will be responsible for configuration and deployment?</strong>: The requestor can use this field to indicate whether they need help desk to install the requested item or if they will be installing it themselves.</li><li><strong>Installation / deployment location</strong>: The requestor is required to indicate where the requested item will be installed/placed.</li><li><strong>Why is this request being submitted?</strong>: The requestor is required to justify their request.</li><li><strong>Additional Information</strong>: The requestor can use this field to provide additional instructions or context if they wish to do so.</li></ul>
</div>
<p> </p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Table of Contents User Management Adding and Modifying Users Saving a user record and remaining on the</meta_description>
<number>KB0101013</number>
<published>2022-08-24</published>
<rating/>
<retired/>
<roles/>
<short_description>Unclass Dev Instance Maintenance Notes</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:55:44</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>78267d011ba9dd101497a820f54bcbb4</sys_id>
<sys_mod_count>4</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 19:54:30</sys_updated_on>
<sys_view_count>6</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gb8f6r9krl" rel="nofollow">User Management</a><br />
<ul><li><a href="#mcetoc_1gb8f6r9krm" rel="nofollow">Adding and Modifying Users</a><br />
<ul><li><a href="#mcetoc_1gb8f6r9krn" rel="nofollow">Saving a user record and remaining on the same page</a></li><li><a href="#mcetoc_1gb8f6r9kro" rel="nofollow">Assigning Privileges</a></li><li><a href="#mcetoc_1gb8f6r9krp" rel="nofollow">Setting the Password</a></li><li><a href="#mcetoc_1gb8frsc3ru" rel="nofollow">Locked out users</a></li></ul>
</li><li><a href="#mcetoc_1gb8frsc3rv" rel="nofollow">Removing user access</a></li></ul>
</li><li><a href="#mcetoc_1gb8f6r9krq" rel="nofollow">Outgoing Email Configuration</a></li></ul>
</div>
<p>This article just gives the basics of dev server maintenance from a pseudo-lay-person perspective.</p>
<h1 id="mcetoc_1gb8f6r9krl">User Management</h1>
<p>The list of users can be viewed by clicking on the &#39;<a title="Users" href="/sys_user_list.do" rel="nofollow">Users</a>&#39; link under the &#39;User Administration&#39; section of the left-hand navigation.</p>
<p><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;7908f5011ba9dd101497a820f54bcb4c" alt="" width="370" height="97" align="baseline" border="" hspace="" vspace="" /></p>
<h2 id="mcetoc_1gb8f6r9krm">Adding and Modifying Users</h2>
<p>Adding a user takes 3 steps. In the first step, you will enter the basic information, such as name, title and email address and save the new record. In the next 2 steps, you&#39;ll grant privileges and then set the password.</p>
<h3 id="mcetoc_1gb8f6r9krn">Saving a user record and remaining on the same page</h3>
<p>If you use the &#39;Submit&#39; or &#39;Update&#39; button to save changes, you will be returned to the user listing page. To save time, you can right click on the form header and select &#39;Save&#39; to save the changes and stay on the same page for the remaining steps.</p>
<p><img style="align: baseline;" src="sys_attachment.do?sys_id&#61;1c0ff9851ba9dd101497a820f54bcbd4" width="317" height="139" align="baseline" /></p>
<h3 id="mcetoc_1gb8f6r9kro">Assigning Privileges</h3>
<p>Normally, privileges are assigned to users according to their group memberships. At the bottom of the user edit form, there is a &#39;Groups&#39; tab where you&#39;ll use the &#39;Edit&#39; button to add them to groups.</p>
<p>In order to see the &#39;Groups&#39; tab, you will need to be in the &#39;Default view&#39;. If you do not see the groups tab at the bottom, you can switch to the appropriate view as depicted in the following image:</p>
<p><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;adaabdc11ba9dd101497a820f54bcbf4" alt="" width="240" height="246" align="baseline" border="" hspace="" vspace="" /></p>
<p>If the new person requires system administration privileges in ServiceNow, you will need to directly modify their roles using the Roles tab. The &#39;admin&#39; role grants most of the typical admin privileges. The &#39;security_admin&#39; role is a special role that allows an administrator to make changes that affect application security. When modifying the roles, the left-hand list contains the available roles, and the right-hand list is the roles that have been explicitly assigned. To find the &#39;security_admin&#39; role, you may need to search for it. The following graphics depict the roles tab and the screen that you&#39;d see when you click the &#39;Edit&#39; button:</p>
<p><img style="align: top;" src="sys_attachment.do?sys_id&#61;ad9086851ba9dd101497a820f54bcb9a" width="217" height="221" align="top" /><img style="align: top;" src="sys_attachment.do?sys_id&#61;252146851ba9dd101497a820f54bcb80" width="417" height="306" align="top" /></p>
<h3 id="mcetoc_1gb8f6r9krp">Setting the Password</h3>
<p>To set the password, you will need to switch to the &#34;Security&#34; view.</p>
<p><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;2f9b71811ba9dd101497a820f54bcbba" alt="" width="277" height="271" align="baseline" border="" hspace="" vspace="" /></p>
<p>When setting and changing the passwords, it is good practice to check the &#34;Password needs reset&#34; field. The exception to this would be when the person is at your keyboard typing their new password.</p>
<h3 id="mcetoc_1gb8frsc3ru">Locked out users</h3>
<p>If someone forgets their password and causes their account to be locked out, the &#39;Security&#39; view has a checkbox labeled &#39;Locked out&#39;, which you can uncheck to resolve the problem.</p>
<h2 id="mcetoc_1gb8frsc3rv">Removing user access</h2>
<p>ServiceNow recommends that users should not be deleted. Instead, they should be deactivated when you wish to disallow access. The &#39;Security&#39; view has a checkbox labeled &#39;Active&#39;, which you can deselect in order to deactivate a user.</p>
<h1 id="mcetoc_1gb8f6r9krq">Outgoing Email Configuration</h1>
<p>There may be some functionality that sends out emails every day, such as the one that gives a daily overview of outstanding incidents and requests per group. Sometimes people complain about getting spammed by this. When this happens, you have some options to control the outgoing email. To modify outgoing email behavior, open the &#39;<a title="Email Properties" href="/email_properties.do" rel="nofollow">Email Properties</a>&#39; menu item under the &#39;System Mailboxes&#39; section of the left-hand navigation.</p>
<ol style="list-style-type: lower-alpha; list-style-position: inside;"><li>One option is to completely disable outgoing email by unchecking the &#39;Email sending enabled&#39; checkbox.</li><li>Another option is to divert all outgoing email to a single email address by enabling email sending and entering an email address in the &#39;Send all email to...&#39; text box. If this text box is empty, then outgoing emails will get sent to their intended recipients.</li><li>Another option is to look at the <a title="email logs" href="/sys_email_list.do?sysparm_query&#61;sys_created_onONToday%40javascript%3Ags.daysAgoStart%280%29%40javascript%3Ags.daysAgoEnd%280%29%5EEQ" rel="nofollow">email logs</a> to see what would have been sent out.</li></ol>
<p><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;5834c2091ba9dd101497a820f54bcb04" alt="" width="312" height="229" align="baseline" border="" hspace="" vspace="" /></p>
<p> </p>
<p> </p>
<p> </p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#f9f9f9</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>AddAdminRoles.png</file_name>
<hash>1da76ce7d70a06e5c6f8c15227560e75caf32d12ee33f2b0edfbe3b28f9c3608</hash>
<image_height>306</image_height>
<image_width>417</image_width>
<size_bytes>17751</size_bytes>
<size_compressed>17185</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:26:36</sys_created_on>
<sys_id>252146851ba9dd101497a820f54bcb80</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-08-24 17:26:36</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>78267d011ba9dd101497a820f54bcbb4</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>H4sIAAAAAAAAANy7ZVBcwdc+SHCHwX1gcAjuHmCQ4A7BJbgONrgEGxyCRXAJDiG4uyS4u0Nwd1/y2313393a+le9X/bDfrh1q/ue293nnO7nebru7Ug1FTksdDJ0ODg4rPfyYA04uDc5rxc3KvJrjaa+M8fr7Y2bhpwUXMUIxd5rAdFaUlkSDq4qHuPRDOm1jOYi/8ENDg6759/1JoUVmxwODnz4Hiyp5WV8tIziNzWFgHK6OnzcaiA870srbcnU8G7Jl0YlHRZVhMqupgZA4f74BLAcJJonD/41+KOgYEz5pmE50PhYBZtJ72/t5c0VPseJETtU7PPDNj1HZK4hPAgEYlRboIqEwSpEwnEBACEsaRgMlv73czya5cePHaaccwraEQoFUmBwaDlifkFB50fueYURxjYrIBB4e3+/YAeD7X6WYuLjI+zs7HSBQKqmtSiJopF+//4Ni45OAtpPlyDV6jv61tkN/PnzuV0EIAsGu0c2b4KNtXvh8JIV6HnJhts3tdmCEAFrYWFhdXgAgJEGKjMB+qLetE6KhLXHHXYkrALFU6kIXmfkhTJPNravJeWsjgyU+y2YZgv8VWRn4zfxipxWP8pY+4tBg9AETDfTl0pkolQlAh2Ua7/3LTzhvW4oXsa8Dvzbe3OCFONHFB3dZJTWXp0i7reCAaLz/Nhb23/n+9iz1nsY</data>
<length>696</length>
<position>0</position>
<sys_attachment display_value="AddAdminRoles.png" sys_id="252146851ba9dd101497a820f54bcb80">252146851ba9dd101497a820f54bcb80</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:26:36</sys_created_on>
<sys_id>652146851ba9dd101497a820f54bcb80</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>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</data>
<length>22220</length>
<position>1</position>
<sys_attachment display_value="AddAdminRoles.png" sys_id="252146851ba9dd101497a820f54bcb80">252146851ba9dd101497a820f54bcb80</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:26:36</sys_created_on>
<sys_id>e52146851ba9dd101497a820f54bcb80</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#e6eeef</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>EmailProperties.png</file_name>
<hash>83663a0772bd3b487244b0e4237d15b8b23608629533bf46c2d69a401cb7f0be</hash>
<image_height>229</image_height>
<image_width>312</image_width>
<size_bytes>32846</size_bytes>
<size_compressed>32464</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:39:53</sys_created_on>
<sys_id>5834c2091ba9dd101497a820f54bcb04</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-08-24 17:39:53</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>78267d011ba9dd101497a820f54bcbb4</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>22056</length>
<position>0</position>
<sys_attachment display_value="EmailProperties.png" sys_id="5834c2091ba9dd101497a820f54bcb04">5834c2091ba9dd101497a820f54bcb04</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:39:53</sys_created_on>
<sys_id>9834c2091ba9dd101497a820f54bcb04</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>21232</length>
<position>1</position>
<sys_attachment display_value="EmailProperties.png" sys_id="5834c2091ba9dd101497a820f54bcb04">5834c2091ba9dd101497a820f54bcb04</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:39:53</sys_created_on>
<sys_id>1c34c2091ba9dd101497a820f54bcb04</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#eaeeee</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>RolesTab.png</file_name>
<hash>4ea09cd49f07510cf06fa72b6ee53bf679912d0a7202eab3a04b835f412699ca</hash>
<image_height>221</image_height>
<image_width>217</image_width>
<size_bytes>22443</size_bytes>
<size_compressed>22341</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:24:08</sys_created_on>
<sys_id>ad9086851ba9dd101497a820f54bcb9a</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-08-24 17:24:08</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>78267d011ba9dd101497a820f54bcbb4</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>22016</length>
<position>0</position>
<sys_attachment display_value="RolesTab.png" sys_id="ad9086851ba9dd101497a820f54bcb9a">ad9086851ba9dd101497a820f54bcb9a</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:24:08</sys_created_on>
<sys_id>ed9086851ba9dd101497a820f54bcb9a</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>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</data>
<length>7776</length>
<position>1</position>
<sys_attachment display_value="RolesTab.png" sys_id="ad9086851ba9dd101497a820f54bcb9a">ad9086851ba9dd101497a820f54bcb9a</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:24:08</sys_created_on>
<sys_id>619086851ba9dd101497a820f54bcb9b</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#f5f5f5</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>SaveRecord.png</file_name>
<hash>99c1c3e5c192594940da1b5699c684dc0bb237baf92e1fbfa46d59f1610343dd</hash>
<image_height>139</image_height>
<image_width>317</image_width>
<size_bytes>14122</size_bytes>
<size_compressed>14102</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:17:14</sys_created_on>
<sys_id>1c0ff9851ba9dd101497a820f54bcbd4</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-08-24 17:17:14</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>78267d011ba9dd101497a820f54bcbb4</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>H4sIAAAAAAAAAA==</data>
<length>16</length>
<position>0</position>
<sys_attachment display_value="SaveRecord.png" sys_id="1c0ff9851ba9dd101497a820f54bcbd4">1c0ff9851ba9dd101497a820f54bcbd4</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:17:14</sys_created_on>
<sys_id>5c0ff9851ba9dd101497a820f54bcbd4</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>18792</length>
<position>1</position>
<sys_attachment display_value="SaveRecord.png" sys_id="1c0ff9851ba9dd101497a820f54bcbd4">1c0ff9851ba9dd101497a820f54bcbd4</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:17:14</sys_created_on>
<sys_id>dc0ff9851ba9dd101497a820f54bcbd4</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#f3f5f5</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>SelectDefaultView.png</file_name>
<hash>c996c29f332df2b01eb20f7605120f8c4d4d79a405ba25d34b8cd883a4da6cd6</hash>
<image_height>246</image_height>
<image_width>240</image_width>
<size_bytes>24257</size_bytes>
<size_compressed>24285</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 16:58:12</sys_created_on>
<sys_id>adaabdc11ba9dd101497a820f54bcbf4</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-08-24 16:58:12</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>78267d011ba9dd101497a820f54bcbb4</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>22012</length>
<position>0</position>
<sys_attachment display_value="SelectDefaultView.png" sys_id="adaabdc11ba9dd101497a820f54bcbf4">adaabdc11ba9dd101497a820f54bcbf4</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 16:58:12</sys_created_on>
<sys_id>edaabdc11ba9dd101497a820f54bcbf4</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>10368</length>
<position>1</position>
<sys_attachment display_value="SelectDefaultView.png" sys_id="adaabdc11ba9dd101497a820f54bcbf4">adaabdc11ba9dd101497a820f54bcbf4</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 16:58:12</sys_created_on>
<sys_id>61aabdc11ba9dd101497a820f54bcbf5</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#e9ede8</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>SelectSecurityView.png</file_name>
<hash>b57f4144f6d611b5c518fbc3a27168d46c8ec2e5dd6f6ad5c31c58ee18f3a013</hash>
<image_height>271</image_height>
<image_width>277</image_width>
<size_bytes>30300</size_bytes>
<size_compressed>30301</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:02:26</sys_created_on>
<sys_id>2f9b71811ba9dd101497a820f54bcbba</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-08-24 17:02:26</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>78267d011ba9dd101497a820f54bcbb4</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>22004</length>
<position>0</position>
<sys_attachment display_value="SelectSecurityView.png" sys_id="2f9b71811ba9dd101497a820f54bcbba">2f9b71811ba9dd101497a820f54bcbba</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:02:26</sys_created_on>
<sys_id>6f9b71811ba9dd101497a820f54bcbba</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>18400</length>
<position>1</position>
<sys_attachment display_value="SelectSecurityView.png" sys_id="2f9b71811ba9dd101497a820f54bcbba">2f9b71811ba9dd101497a820f54bcbba</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 17:02:26</sys_created_on>
<sys_id>ef9b71811ba9dd101497a820f54bcbba</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#93a97f</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>UsersMenuItem.png</file_name>
<hash>4fa7778025f5f031b6a0181265a39f4084a4e0d25f0f87c7d47c3dd30098b6f1</hash>
<image_height>97</image_height>
<image_width>370</image_width>
<size_bytes>13069</size_bytes>
<size_compressed>13026</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 16:46:45</sys_created_on>
<sys_id>7908f5011ba9dd101497a820f54bcb4c</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-08-24 16:46:45</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>78267d011ba9dd101497a820f54bcbb4</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>H4sIAAAAAAAAAA==</data>
<length>16</length>
<position>0</position>
<sys_attachment display_value="UsersMenuItem.png" sys_id="7908f5011ba9dd101497a820f54bcb4c">7908f5011ba9dd101497a820f54bcb4c</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 16:46:45</sys_created_on>
<sys_id>b908f5011ba9dd101497a820f54bcb4c</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>17356</length>
<position>1</position>
<sys_attachment display_value="UsersMenuItem.png" sys_id="7908f5011ba9dd101497a820f54bcb4c">7908f5011ba9dd101497a820f54bcb4c</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-08-24 16:46:45</sys_created_on>
<sys_id>3d08f5011ba9dd101497a820f54bcb4c</sys_id>
</sys_attachment_doc>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Client-callable methods for the ReservationScheduler API. Table of Contents Sources Asynchronous Methods</meta_description>
<number>KB0101012</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>ReservationSchedulerAjax API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 19:45:25</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>8f78220e1b82d510ec0320efe54bcbe0</sys_id>
<sys_mod_count>4</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 20:14:47</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Client-callable methods for the <a title="ReservationScheduler API" href="/kb_view.do?sysparm_article&#61;KB0101005" rel="nofollow">ReservationScheduler API</a>.</p>
<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgr0j9e1" rel="nofollow">Sources</a></li><li><a href="#mcetoc_1gdgptbk11a" rel="nofollow">Asynchronous Methods</a><br />
<ul><li><a href="#mcetoc_1gdgptbk11b" rel="nofollow">getNextAvailableTimeSlot</a><br />
<ul><li><a href="#mcetoc_1gdgptbk11c" rel="nofollow">Asynchronous Parameters</a></li><li><a href="#mcetoc_1gdgptbk11d" rel="nofollow">Response Element</a></li></ul>
</li><li><a href="#mcetoc_1gdgptbk11e" rel="nofollow">getAvailabilitiesInRange</a><br />
<ul><li><a href="#mcetoc_1gdgptbk11f" rel="nofollow">Asynchronous Parameters</a></li><li><a href="#mcetoc_1gdgptbk11g" rel="nofollow">Response Element</a></li></ul>
</li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgr0j9e1">Sources</h1>
<ul style="list-style-position: inside;"><li><a title="Script Include" href="/sys_script_include.do?sys_id&#61;b907bb582f05111035be56e62799b602" rel="nofollow">Script Include</a></li><li><a title="TypeScript (GitHub)" href="https://github.com/USASOC-HQ/site_17_server_side/blob/main/source/api/ReservationSchedulerAjax.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="mcetoc_1gdgptbk11a">Asynchronous Methods</h1>
<h2 id="mcetoc_1gdgptbk11b">getNextAvailableTimeSlot</h2>
<p>Gets the next available time slot.</p>
<h3 id="mcetoc_1gdgptbk11c">Asynchronous Parameters</h3>
<ul style="list-style-position: inside;"><li><strong><var>sys_parm_reservation_type</var></strong>: The <code class="language-javascript">sys_id</code> of the reservation type.</li><li><strong><var>sys_parm_allow_inactive</var></strong>: Optional boolean indicating whether to allow inactive reservation types.</li><li><strong><var>sys_parm_from</var></strong>: The date and time to start from.</li><li><strong><var>sys_parm_to</var></strong>: The end date and time to search within.</li><li><strong><var>sys_parm_duration</var></strong> (optional): The minimum reservation duration in minutes.</li><li><strong><var>sys_parm_include</var></strong> (optional): The list of comma-separated result inclusions. Values for result inclusions are:<br />
<ul style="list-style-position: inside;"><li><code class="language-javascript">&#34;all&#34;</code>: Includes all additional properties.</li><li><code class="language-javascript">&#34;group&#34;</code>: Includes <var>assignment_group</var> and <var>approval_group</var> properties.</li><li><code class="language-javascript">&#34;assignment_group&#34;</code>: The <var>sys_id</var> of the assignment group will be contained in the <var>assignment_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;approval_group&#34;</code>: If there is an approval group, the <var>sys_id</var> will be contained in the <var>approval_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;durations&#34;</code>: Includes <var>duration_increment</var>, <var>minimum_duration</var>, <var>maximum_duration</var> and <var>start_time_interval</var> properties.</li><li><code class="language-javascript">&#34;duration_increment&#34;</code>: The number of minutes for duration increments will be contained in the <var>duration_increment</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;minimum_duration&#34;</code>: The minimum number of minutes for durations will be contained in the <var>minimum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;maximum_duration&#34;</code>: The maximum number of minutes for durations will be contained in the <var>maximum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;start_time_interval&#34;</code>: The number of minutes for start time intervals will be contained in the <var>start_time_interval</var> attribute of the <var>scheduler_type</var> element.</li></ul>
</li></ul>
<h3 id="mcetoc_1gdgptbk11d">Response Element</h3>
<ul style="list-style-position: inside;"><li><strong><var>availability</var></strong>: This element contains the availability response with the following attributes:<br />
<ul style="list-style-position: inside;"><li><strong><var>success</var></strong>: Contains the value <code class="language-javascript">&#34;true&#34;</code> if there was an availability; otherwise, it will contain <code class="language-javascript">&#34;false&#34;</code>.</li><li><strong><var>startDateTime</var></strong>: Contains the start date and time of the next availability if there was an availability; otherwise, this attribute will not be present.</li><li><strong><var>durationMinutes</var></strong>: Contains the number of contiguous minutes that are open for reservation if there was an availability; otherwise, this attribute will not be present.</li></ul>
</li></ul>
<h2 id="mcetoc_1gdgptbk11e">getAvailabilitiesInRange</h2>
<p>Gets the reservation availabilities within a given date and time range.</p>
<h3 id="mcetoc_1gdgptbk11f">Asynchronous Parameters</h3>
<ul style="list-style-position: inside;"><li><strong><var>sys_parm_reservation_type</var></strong>: The sys_id of the reservation type.</li><li><strong><var>sys_parm_from</var></strong>: The date and time to start from.</li><li><strong><var>sys_parm_to</var></strong>: The end date and time to search within.</li><li><strong><var>sys_parm_allow_inactive</var></strong> (optional): Boolean value indicating whether to allow inactive reservation types.</li><li><strong><var>sys_parm_duration</var></strong> (optional): The minimum reservation duration in minutes.</li><li><strong><var>sys_parm_include</var></strong> (optional): The list of comma-separated result inclusions. Values for result inclusions are:<br />
<ul style="list-style-position: inside;"><li><code class="language-javascript">&#34;all&#34;</code>: Includes all additional properties.</li><li><code class="language-javascript">&#34;group&#34;</code>: Includes <var>assignment_group</var> and <var>approval_group</var> properties.</li><li><code class="language-javascript">&#34;approval_group&#34;</code>: If there is an approval group, the <var>sys_id</var> will be contained in the <var>approval_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;assignment_group&#34;</code>: The <var>sys_id</var> of the assignment group will be contained in the <var>assignment_group</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;durations&#34;</code>: Includes <var>duration_increment</var>, <var>minimum_duration</var>, <var>maximum_duration</var> and <var>start_time_interval</var> properties.</li><li><code class="language-javascript">&#34;duration_increment&#34;</code>: The number of minutes for duration increments will be contained in the <var>duration_increment</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;minimum_duration&#34;</code>: The minimum number of minutes for durations will be contained in the <var>minimum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;maximum_duration&#34;</code>: The maximum number of minutes for durations will be contained in the <var>maximum_duration</var> attribute of the <var>scheduler_type</var> element.</li><li><code class="language-javascript">&#34;start_time_interval&#34;</code>: The number of minutes for start time intervals will be contained in the <var>start_time_interval</var> attribute of the <var>scheduler_type</var> element.</li></ul>
</li></ul>
<h3 id="mcetoc_1gdgptbk11g">Response Element</h3>
<ul style="list-style-position: inside;"><li><strong><var>availabilities</var></strong>: Contains the availabilities that were found. The <code class="language-javascript">length</code> attribute contains the number of availabilities found.<br />
<ul style="list-style-position: inside;"><li><strong><var>availability</var></strong>: One or more nested attributes representing individual date/time ranges open for reservation, with the following attributes:<br />
<ul style="list-style-position: inside;"><li><strong><var>startDateTime</var></strong>: the start date and time.</li><li><strong><var>durationMinutes</var></strong>: the number of contiguous minutes that are open for reservation.</li></ul>
</li></ul>
</li></ul>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>API supporting user profile checking. Static methods are intended to be called server-side and instance</meta_description>
<number>KB0101011</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>ProfileValidator API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 19:04:42</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>6e6026c61b82d510ec0320efe54bcb46</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 20:13:12</sys_updated_on>
<sys_view_count>0</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>API supporting user profile checking.<br />Static methods are intended to be called server-side and instance methods are client-callable.</p>
<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgqtm7r2" rel="nofollow">Sources</a></li><li><a href="#methods" rel="nofollow">Methods</a><br />
<ul><li><a href="#isuserlookupfault" rel="nofollow">isUserLookupFault</a></li><li><a href="#getuserlookupresult" rel="nofollow">getUserLookupResult</a></li><li><a href="#checkuserprofilecompliance" rel="nofollow">checkUserProfileCompliance</a></li><li><a href="#getuserprofilecompliance" rel="nofollow">getUserProfileCompliance</a></li><li><a href="#getusernotifications" rel="nofollow">getUserNotifications</a></li><li><a href="#getprofilephonefields" rel="nofollow">getProfilePhoneFields</a></li><li><a href="#getprofilecompliancecheckfields" rel="nofollow">getProfileComplianceCheckFields</a></li><li><a href="#getuserphoneandorg" rel="nofollow">getUserPhoneAndOrg</a></li><li><a href="#getuserphone" rel="nofollow">getUserPhone</a></li><li><a href="#getuserorg" rel="nofollow">getUserOrg</a></li><li><a href="#getuserprofilecompliance-async" rel="nofollow">getUserProfileCompliance (async)</a></li><li><a href="#getusernotifications-async" rel="nofollow">getUserNotifications (async)</a></li><li><a href="#getuserphoneandorg-async" rel="nofollow">getUserPhoneAndOrg (async)</a></li><li><a href="#getuserphone-async" rel="nofollow">getUserPhone (async)</a></li><li><a href="#getuserorg-async" rel="nofollow">getUserOrg (async)</a></li></ul>
</li><li><a href="#interfaces" rel="nofollow">Interfaces</a><br />
<ul><li><a href="#iprofilefielddefinition" rel="nofollow">IProfileFieldDefinition</a></li><li><a href="#iuserlookupresult" rel="nofollow">IUserLookupResult</a></li><li><a href="#icompliancecheckresult" rel="nofollow">IComplianceCheckResult</a></li><li><a href="#iuserprofilecomplianceinfo" rel="nofollow">IUserProfileComplianceInfo</a></li><li><a href="#iuserprofilecomplianceresult" rel="nofollow">IUserProfileComplianceResult</a></li><li><a href="#iusernotificationsresult" rel="nofollow">IUserNotificationsResult</a></li><li><a href="#iphoneandorg" rel="nofollow">IPhoneAndOrg</a></li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgqtm7r2">Sources</h1>
<ul style="list-style-position: inside;"><li><a title="Script Include" href="/sys_script_include.do?sys_id&#61;90fe36e51bf681101497a820f54bcbff" rel="nofollow">Script Include</a></li><li><a title="TypeScript (GitHub)" href="https://github.com/USASOC-HQ/site_17_server_side/blob/main/source/api/ProfileValidator.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="methods">Methods</h1>
<h2 id="isuserlookupfault">isUserLookupFault</h2>
<p>Indicates whether the user lookup result represents a fatal error.</p>
<pre class="language-javascript"><code>isUserLookupFault(result: IUserLookupResult): boolean;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>result</var></strong>: <a href="#iuserlookupresult" rel="nofollow"><code class="language-typescript">IUserLookupResult</code></a> - The user lookup result object to test.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the user lookup result indicates a fatal error; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="getuserlookupresult">getUserLookupResult</h2>
<p>Attempts to get a related user or look up a user.</p>
<pre class="language-javascript"><code>getUserLookupResult(user: GlideRecord | GlideElementReference | string): IUserLookupResult;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>user</var></strong>: <code class="language-typescript">(GlideRecord | GlideElementReference | string)</code> - The object referring to a user, a <code class="language-typescript">sys_id</code> for a user or a user name (<code class="language-typescript">user_id</code>).</li></ul>
<p>Returns An <a href="#iuserlookupresult" rel="nofollow"><code class="language-typescript">IUserLookupResult</code></a> object that represents the result of detecting the associated user or looking up the user.</p>
<h2 id="checkuserprofilecompliance">checkUserProfileCompliance</h2>
<p>Does a compliance check for the specified sys_user.</p>
<pre class="language-javascript"><code>checkUserProfileCompliance(sys_user: GlideRecord | GlideElementReference): IUserProfileComplianceInfo;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>sys_user</var></strong>: <code class="language-typescript">(GlideRecord | GlideElementReference)</code> - The user to validate.</li></ul>
<p>Returns An <a href="#iuserprofilecomplianceinfo" rel="nofollow"><code class="language-typescript">IUserProfileComplianceInfo</code></a> object that describes the compliance check result.</p>
<h2 id="getuserprofilecompliance">getUserProfileCompliance</h2>
<p>Gets compliance check information for the specified user.</p>
<pre class="language-javascript"><code>getUserProfileCompliance(user: GlideRecord | GlideElementReference | string): IUserProfileComplianceResult;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>user</var></strong>: <code class="language-typescript">(GlideRecord | GlideElementReference | string)</code> - The object referring to a user, a <code class="language-typescript">sys_id </code>for a user or a user name (<code class="language-typescript">user_id</code>).</li></ul>
<p>Returns An <a href="#iuserprofilecomplianceresult" rel="nofollow"><code class="language-typescript">IUserProfileComplianceResult</code></a> object that describes the result of the compliance check.</p>
<h2 id="getusernotifications">getUserNotifications</h2>
<p>Gets compliance check notifications for the specified user.</p>
<pre class="language-javascript"><code>getUserNotifications(user: GlideRecord | GlideElementReference | string): IUserNotificationsResult;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>user</var></strong>: <code class="language-typescript">(GlideRecord | GlideElementReference | string)</code> - The object referring to a user, a <code class="language-typescript">sys_id </code>for a user or a user name (<code class="language-typescript">user_id</code>).</li></ul>
<p>Returns <a href="#iusernotificationsresult" rel="nofollow"><code class="language-typescript">IUserNotificationsResult</code></a> An object that contains the compliance notification information.</p>
<h2 id="getprofilephonefields">getProfilePhoneFields</h2>
<p>Gets the names of the fields for the user profile that may contain phone numbers.</p>
<pre class="language-javascript"><code>getProfilePhoneFields(): string[];</code></pre>
<p>Returns an array of strings containing the names of the fields for the user profile that may contain phone numbers.</p>
<h2 id="getprofilecompliancecheckfields">getProfileComplianceCheckFields</h2>
<p>Gets the names of the profile fields to be validated.</p>
<pre class="language-javascript"><code>getProfileComplianceCheckFields(): string[];</code></pre>
<p>Returns an array of strings containing the names of the profile fields to be validated.</p>
<h2 id="getuserphoneandorg">getUserPhoneAndOrg</h2>
<p>Gets the primary phone number and organization entity for the specified user.</p>
<pre class="language-javascript"><code>getUserPhoneAndOrg(user?: string | sys_userGlideRecord | sys_userElement): IPhoneAndOrg | undefined;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>user</var></strong>: <code class="language-typescript">(string | sys_userGlideRecord | sys_userElement)</code> - The user record or Sys ID of a user profile.</li></ul>
<p>Returns an <a href="#iphoneandorg" rel="nofollow"><code class="language-typescript">IPhoneAndOrg</code></a> object containing primary phone number and organization entity for the specified user or <code class="language-typescript">undefined</code> if the user does not exist.</p>
<h2 id="getuserphone">getUserPhone</h2>
<p>Gets the primary phone number for the specified user.</p>
<pre class="language-javascript"><code>getUserPhone(user?: string | sys_userGlideRecord | sys_userElement): string | undefined;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>user</var></strong>: <code class="language-typescript">(string | sys_userGlideRecord | sys_userElement)</code> - The user record or Sys ID of a user profile.</li></ul>
<p>Returns the primary phone number for the specified user or <code class="language-typescript">undefined</code> if the user does not exist or no phone number was found.</p>
<h2 id="getuserorg">getUserOrg</h2>
<p>Gets the organization name for the specified user.</p>
<pre class="language-javascript"><code>getUserOrg(user?: string | sys_userGlideRecord | sys_userElement): string | undefined;</code></pre>
<p>Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>user</var></strong>: <code class="language-typescript">(string | sys_userGlideRecord | sys_userElement)</code> - The user record or Sys ID of a user profile.</li></ul>
<p>Returns the organization name for the specified user or <code class="language-typescript">undefined</code> if the user does not exist or no related organization was found.</p>
<h2 id="getuserprofilecompliance-async">getUserProfileCompliance (async)</h2>
<p>Gets compliance check information for a user profile.</p>
<p>Asynchronous Parameter:</p>
<ul style="list-style-position: inside;"><li><strong><var>sysparm_user_id</var></strong>: The <code class="language-typescript">sys_id</code> or <code class="language-typescript">user_id</code> of a user.</li></ul>
<p>Returns A JSON string containing an <a href="#iuserprofilecomplianceresult" rel="nofollow"><code class="language-typescript">IUserProfileComplianceResult</code></a> object that describes the result of the compliance check.</p>
<h2 id="getusernotifications-async">getUserNotifications (async)</h2>
<p>Gets compliance check notifications for a user profile.</p>
<ul style="list-style-position: inside;"><li><strong><var>sysparm_user_id</var></strong>: The <code class="language-typescript">sys_id</code> or <code class="language-typescript">user_id</code> of a user.</li></ul>
<p>Returns A JSON string containing an <a href="#iusernotificationsresult" rel="nofollow"><code class="language-typescript">IUserNotificationsResult</code></a> object that contains the compliance notification information.</p>
<h2 id="getuserphoneandorg-async">getUserPhoneAndOrg (async)</h2>
<p>Gets the primary phone number and organization entity for a user profile.</p>
<ul style="list-style-position: inside;"><li><strong><var>sysparm_user_id</var></strong>: The <code class="language-typescript">sys_id</code> or <code class="language-typescript">user_id</code> of a user.</li></ul>
<p>Response Element</p>
<ul style="list-style-position: inside;"><li><strong><var>result</var></strong>: Contains the following attributes:<br />
<ul style="list-style-position: inside;"><li><strong><var>org</var></strong>: The organization name.</li><li><strong><var>phone</var></strong>: The primary phone number.</li></ul>
</li></ul>
<h2 id="getuserphone-async">getUserPhone (async)</h2>
<p>Gets the primary phone number for a user profile.</p>
<ul style="list-style-position: inside;"><li><strong><var>sysparm_user_id</var></strong>: The <code class="language-typescript">sys_id</code> or <code class="language-typescript">user_id</code> of a user.</li></ul>
<p>Returns The primary phone number for the specified user or an empty string if the user does not exist or no phone number was found.</p>
<h2 id="getuserorg-async">getUserOrg (async)</h2>
<p>Gets the primary phone number for a user profile.</p>
<ul style="list-style-position: inside;"><li><strong><var>sysparm_user_id</var></strong>: The <code class="language-typescript">sys_id</code> or <code class="language-typescript">user_id</code> of a user.</li></ul>
<p>Returns The organization name for the specified user or an empty string if the user does not exist or no related organization was found.</p>
<h1 id="interfaces">Interfaces</h1>
<h2 id="iprofilefielddefinition">IProfileFieldDefinition</h2>
<p>Defines a profile field to be validated.</p>
<p>Properties:</p>
<ul style="list-style-position: inside;"><li><strong><var>name</var></strong>: <code class="language-typescript">{string}</code> - The table column name.</li><li><strong><var>label</var></strong>: <code class="language-typescript">{string}</code> - The label for the field.</li><li><strong><var>failAdj</var></strong>: <code class="language-typescript">{string}</code> - Adjective used for the field for failure messages.</li></ul>
<h2 id="iuserlookupresult">IUserLookupResult</h2>
<p>Represents the results of a user lookup</p>
<p>Properties:</p>
<ul style="list-style-position: inside;"><li><strong><var>code</var></strong>: <code class="language-typescript">{number}</code> - The profile compliance check result code: 0&#61;Success; 1&#61;User not found; 2&#61;Unexpected exception trying to find user.</li><li><strong>sys_id</strong> (optional): <code class="language-typescript">{string}</code> - The sys_id of the sys_user that was found or the sys_id that was used for the user lookup.</li><li><strong>user_id</strong> (optional): <code class="language-typescript">{string}</code> - The user_id of the sys_user that was found or the user_id that was used for the user lookup.</li><li><strong>user</strong> (optional): <code class="language-typescript">{GlideRecord}</code> - The sys_user that was found.</li><li><strong>message</strong> (optional): <code class="language-typescript">{string}</code> - The user lookup failure message.</li><li><strong>fault</strong> (optional): <code class="language-typescript">{any}</code> - Describes the fatal error.</li></ul>
<h2 id="icompliancecheckresult">IComplianceCheckResult</h2>
<p>Represents the results of a compliance check for a profile field.</p>
<p>Properties:</p>
<ul style="list-style-position: inside;"><li><strong><var>label</var></strong>: <code class="language-typescript">{string}</code> - The label for the field that was checked.</li><li><strong><var>passed</var></strong>: <code class="language-typescript">{boolean}</code> - Indicates whether the compliance check passed.</li><li><strong>message</strong> (optional): <code class="language-typescript">{string}</code> - The field access failure message.</li><li><strong>fault</strong> (optional): <code class="language-typescript">{any}</code> - Describes the fatal error.</li></ul>
<h2 id="iuserprofilecomplianceinfo">IUserProfileComplianceInfo</h2>
<p>User compliance check information.</p>
<p>Properties:</p>
<ul style="list-style-position: inside;"><li><strong><var>notChecked</var></strong>: <code class="language-typescript">{number}</code> - The number of compliance checks not evaluated due to fatal exception.</li><li><strong><var>passed</var></strong>: <code class="language-typescript">{number}</code> - The number of evaluated compliance checks that passed.</li><li><strong><var>failed</var></strong>: <code class="language-typescript">{number}</code> - The number of evaluated compliance checks that failed.</li><li><strong>results</strong> (optional): <code class="language-typescript">{Record&lt;string, IComplianceCheckResult&gt;}</code> - <a href="#icompliancecheckresult" rel="nofollow">Compliance check results</a> by name.</li><li><strong><var>message</var></strong>: <code class="language-typescript">{string}</code> - Compliance check result message.</li><li><strong>fault</strong> (optional): <code class="language-typescript">{any}</code> - Describes the fatal error.</li></ul>
<h2 id="iuserprofilecomplianceresult">IUserProfileComplianceResult</h2>
<p>Represents the results of a profile compliance check.</p>
<p>Properties:</p>
<ul style="list-style-position: inside;"><li><strong><var>code</var></strong>: <code class="language-typescript">{number}</code> - The profile compliance check result code: 0&#61;Success; 1&#61;User not found; 2&#61;Unexpected exception trying to find user.</li><li><strong>sys_id</strong> (optional): <code class="language-typescript">{string}</code> - The sys_id of the sys_user that was found or the sys_id that was used for the user lookup.</li><li><strong>user_id</strong> (optional): <code class="language-typescript">{string}</code> - The user_id of the sys_user that was found or the user_id that was used for the user lookup.</li></ul>
<h2 id="iusernotificationsresult">IUserNotificationsResult</h2>
<p>Properties:</p>
<ul style="list-style-position: inside;"><li><strong><var>code</var></strong>: <code class="language-typescript">{number}</code> - The profile compliance check result code: 0&#61;Success; 1&#61;User not found; 2&#61;Unexpected exception trying to find user.</li><li><strong>sys_id</strong> (optional): <code class="language-typescript">{string}</code> - The sys_id of the sys_user that was found or the sys_id that was used for the user lookup.</li><li><strong>user_id</strong> (optional): <code class="language-typescript">{string}</code> - The user_id of the sys_user that was found or the user_id that was used for the user lookup.</li><li><strong><var>profileCompliance</var></strong>: <a href="#iuserprofilecomplianceinfo" rel="nofollow"><code class="language-typescript">IUserProfileComplianceInfo</code></a> - Profile compliance check information.</li></ul>
<h2 id="iphoneandorg">IPhoneAndOrg</h2>
<p>Properties:</p>
<ul style="list-style-position: inside;"><li><strong><var>org</var></strong>: <code class="language-typescript">{string}</code> - Name of a user&#39;s organization.</li><li><strong><var>phone</var></strong>: <code class="language-typescript">{string}</code> - User&#39;s primary phone number.</li></ul>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Table of Contents Shared Git Organization GitHub Authentication from ServiceNow Unclass-to-Production</meta_description>
<number>KB0101010</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>Using Git with ServiceNow</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 14:16:18</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>ae2a5dc21bce9510ec0320efe54bcb55</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 19:54:30</sys_updated_on>
<sys_view_count>0</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdg6femc98" rel="nofollow">Shared Git Organization</a></li><li><a href="#mcetoc_1gdg6femc99" rel="nofollow">GitHub Authentication from ServiceNow</a></li><li><a href="#mcetoc_1gdg6femc9a" rel="nofollow">Unclass-to-Production Synchronization</a></li><li><a href="#mcetoc_1gdg6femc9b" rel="nofollow">Legacy Development Repositories</a></li></ul>
</div>
<h1 id="mcetoc_1gdg6femc98">Shared Git Organization</h1>
<p>A shared Git organization has been created and can be accessed at the <a title="USASOC-HQ Git org website" href="https://github.com/USASOC-HQ" target="_blank" rel="noopener noreferrer nofollow">USASOC-HQ Git org website</a>. Names of repositories for custom ServiceNow apps will begin with <code>x_</code>. Names of all other repositories should begin with something other than that.</p>
<p>Following is a list of some of the custom applications that are stored in git repositories:</p>
<ul style="list-style-position: inside;"><li><strong>x_g_inte_phys_net</strong> - Shared physical network definitions for pick lists, etc.<br />
<ul style="list-style-position: inside;"><li><strong>x_44813_phys_net_network</strong> - Legacy version of x_g_inte_phys_net which was deployed to our legacy production instance.</li></ul>
</li><li><strong>x_g_inte_usasoc_ia</strong> - USASOC Information Assurance app.</li><li><strong>x_g_inte_off_net_s</strong> - Off-Net Software License Tracking app.</li><li><strong>x_44813_usasoc_cst</strong> - General Legacy Customizations. To be superseded with a x_g_inte_* app once new production environment configuration has been determined.</li></ul>
<h1 id="mcetoc_1gdg6femc99">GitHub Authentication from ServiceNow</h1>
<p>You will need to set up a personal developer token which you will use in ServiceNow to authenticate to GitHub. Log into GitHub and open your personal access token list from the developer settings as depicted: <br /><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;db0ddd061bce9510ec0320efe54bcb73" alt="" width="953" height="486" align="baseline" border="" hspace="" vspace="" /> <br />Under the &#34;Select Scopes&#34; section, Select the &#34;repo&#34; group, and then click the &#34;Generate Token&#34; button at the bottom. <br /><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;625d51061bce9510ec0320efe54bcb6f" alt="" width="564" height="420" align="baseline" border="" hspace="" vspace="" /> <br />Your personal access token will be presented in the next screen. From within ServiceNow, you will configure a basic credential using your GitHub login and the personal access token as the password. <br /><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;ff8d11061bce9510ec0320efe54bcb50" alt="" width="555" height="224" align="baseline" border="" hspace="" vspace="" /> <br />In ServiceNow, you will create credentials as follows:</p>
<ol style="list-style-position: inside;"><li>Navigate to Connections and Credentials ⇛ Credentials.</li><li>Click the &#34;New&#34; button and select &#34;Basic Auth Credentials&#34;.</li><li>In the &#34;User name&#34; field, enter your GitHub login name.</li><li>In the &#34;Password&#34; field, enter the personal access token that was generated in GitHub.</li></ol>
<h1 id="mcetoc_1gdg6femc9a">Unclass-to-Production Synchronization</h1>
<p>This procedure has not yet been fully tested and is subject to further adjustment.</p>
<ol style="list-style-position: inside;"><li>Create local bare clone of repository.
<div style="padding-left: 40px;">Example:
<pre class="language-bash"><code>$ git clone --bare --recursive https://github.com/USASOC-HQ/x_44813_phys_net_network</code></pre>
</div>
</li><li>Ensure target tag and branch has been fetched from the remote repository:<br />
<ol style="list-style-position: inside;"><li>List all tags to get the commit reference for the tag and to ensure the tag exists in the local repository.
<div style="padding-left: 40px;">
<pre class="language-bash"><code>$ git show-ref --tags
393bc8fca9bd180b57db4342d92c10c67316d113 refs/tags/V1.0.0.0
cafbf06e04c92145d814778a5366b58dd37ed9b2 refs/tags/V1.0.1.0​</code></pre>
</div>
</li><li>Ensure a local branch exists which contains the target tag.
<div style="padding-left: 40px;">
<pre class="language-bash"><code>$ git branch --contains 393bc8fca9bd180b57db4342d92c10c67316d113
origin/sn_instances/inscomscd</code></pre>
</div>
</li></ol>
</li><li>Compress the contents of the entire repository folder into a ZIP file and copy it to the production network.</li><li>On the production network extract the repository and create a new branch from the target version tag. See the Classified Network SDLC section of the SDLC page to determine the name of the new branch and for further instructions.</li></ol>
<h1 id="mcetoc_1gdg6femc9b">Legacy Development Repositories</h1>
<p>Previously, all ServiceNow application git repositories were initiated from a personal developer instance and are attributed to a specific person (registration #44813), and not to this organization. Applications and their repositories whose names use the prefix <code>x_44813_</code> should be re-created starting from the <a href="https://inscomscd.servicenowservices.com/" rel="nofollow">Cloud Dev Instance</a>, as outlined in this SDLC, as time permits. ServiceNow applications that have been created on the <a href="https://inscomscd.servicenowservices.com/" rel="nofollow">Cloud Dev Instance</a> will be prefixed with <code>x_g_inte_</code>.</p>
<p>No operational risk is incurred simply because an application was initiated through a personal dev instance. Such applications are just treated the same as any other 3rd party application. This also means that only the individual developer who owned that personal dev instance can make direct changes to that application without experiencing minor semantic complications. Another benefit of initiating apps from the cloud instance is that they are less prone to permissions and trust issues.</p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#f2f5f7</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>DevSettingsPersonalDevTokens.png</file_name>
<hash>871f6e58f92ac9828c7f1d57b9ea39e8872f201f81f1c74965364a575b916437</hash>
<image_height>486</image_height>
<image_width>953</image_width>
<size_bytes>49700</size_bytes>
<size_compressed>44893</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:54:11</sys_created_on>
<sys_id>db0ddd061bce9510ec0320efe54bcb73</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 13:54:11</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>ae2a5dc21bce9510ec0320efe54bcb55</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>45780</length>
<position>0</position>
<sys_attachment display_value="DevSettingsPersonalDevTokens.png" sys_id="db0ddd061bce9510ec0320efe54bcb73">db0ddd061bce9510ec0320efe54bcb73</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:54:11</sys_created_on>
<sys_id>1f0ddd061bce9510ec0320efe54bcb73</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>14080</length>
<position>1</position>
<sys_attachment display_value="DevSettingsPersonalDevTokens.png" sys_id="db0ddd061bce9510ec0320efe54bcb73">db0ddd061bce9510ec0320efe54bcb73</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:54:11</sys_created_on>
<sys_id>9f0ddd061bce9510ec0320efe54bcb73</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#f6f3f3</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>NewPersonalAccessToken.png</file_name>
<hash>15ac0b279a31d7f80ed362173186eb79edbc91bbb4c79e81150155bcd2a08cf2</hash>
<image_height>420</image_height>
<image_width>564</image_width>
<size_bytes>56901</size_bytes>
<size_compressed>55675</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:55:31</sys_created_on>
<sys_id>625d51061bce9510ec0320efe54bcb6f</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 13:55:31</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>ae2a5dc21bce9510ec0320efe54bcb55</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>66540</length>
<position>0</position>
<sys_attachment display_value="NewPersonalAccessToken.png" sys_id="625d51061bce9510ec0320efe54bcb6f">625d51061bce9510ec0320efe54bcb6f</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:55:31</sys_created_on>
<sys_id>a25d51061bce9510ec0320efe54bcb6f</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>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</data>
<length>7696</length>
<position>1</position>
<sys_attachment display_value="NewPersonalAccessToken.png" sys_id="625d51061bce9510ec0320efe54bcb6f">625d51061bce9510ec0320efe54bcb6f</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:55:31</sys_created_on>
<sys_id>265d51061bce9510ec0320efe54bcb6f</sys_id>
</sys_attachment_doc>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#eceeec</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>PersonalAccessTokenGenerated.png</file_name>
<hash>d3415abc471a9f01543bec3692525aeac216d90e4d70554dbcf17a3df6c403c4</hash>
<image_height>224</image_height>
<image_width>555</image_width>
<size_bytes>35643</size_bytes>
<size_compressed>35083</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:56:25</sys_created_on>
<sys_id>ff8d11061bce9510ec0320efe54bcb50</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 13:56:25</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>ae2a5dc21bce9510ec0320efe54bcb55</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>44212</length>
<position>0</position>
<sys_attachment display_value="PersonalAccessTokenGenerated.png" sys_id="ff8d11061bce9510ec0320efe54bcb50">ff8d11061bce9510ec0320efe54bcb50</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:56:25</sys_created_on>
<sys_id>338d11061bce9510ec0320efe54bcb51</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>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</data>
<length>2568</length>
<position>1</position>
<sys_attachment display_value="PersonalAccessTokenGenerated.png" sys_id="ff8d11061bce9510ec0320efe54bcb50">ff8d11061bce9510ec0320efe54bcb50</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 13:56:25</sys_created_on>
<sys_id>b38d11061bce9510ec0320efe54bcb51</sys_id>
</sys_attachment_doc>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Utility class for determining location and org-based approval groups. Table of Contents Sources Constructor</meta_description>
<number>KB0101009</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>LocationApproval API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 18:47:58</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>3b8ed20a1b82d510ec0320efe54bcb62</sys_id>
<sys_mod_count>4</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 20:11:27</sys_updated_on>
<sys_view_count>0</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Utility class for determining location and org-based approval groups.</p>
<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgqq3tq2" rel="nofollow">Sources</a></li><li><a href="#mcetoc_1gdglqbr4d" rel="nofollow">Constructor</a></li><li><a href="#methods" rel="nofollow">Methods</a><br />
<ul><li><a href="#mcetoc_1gdgm195s18" rel="nofollow">getCaller</a></li><li><a href="#mcetoc_1gdgm195s19" rel="nofollow">isVip</a></li><li><a href="#mcetoc_1gdgm195s1a" rel="nofollow">getDefaultApprovalGroup</a></li><li><a href="#mcetoc_1gdgm195s1b" rel="nofollow">getDefaultApprovalGroup (static)</a></li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgqq3tq2">Sources</h1>
<ul style="list-style-position: inside;"><li><a title="Script Include" href="/sys_script_include.do?sys_id&#61;21de96a11bb681101497a820f54bcbac" rel="nofollow">Script Include</a></li><li><a title="TypeScript (GitHub)" href="https://github.com/USASOC-HQ/site_17_server_side/blob/main/source/api/LocationApproval.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="mcetoc_1gdglqbr4d">Constructor</h1>
<p>Creates a new <code class="language-typescript">LocationApproval</code> instance.</p>
<pre class="language-javascript"><code>new LocationApproval(source: GlideRecord | GlideElementReference): LocationApproval;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{(string | GlideRecord | GlideElementReference)}</code> - The source object for the approval context.</li></ul>
<p>Returns a new <code class="language-typescript">LocationApproval</code> instance.</p>
<h1 id="methods">Methods</h1>
<h2 id="mcetoc_1gdgm195s18">getCaller</h2>
<p>Gets the target user of the target record (ie. caller, requested_for).</p>
<pre class="language-javascript"><code>getCaller(): GlideRecord | GlideElement | undefined;</code></pre>
<p>Returns the <code class="language-typescript">GlideRecord</code> or <code class="language-typescript">GlideElementReference</code> for the target user.</p>
<h2 id="mcetoc_1gdgm195s19">isVip</h2>
<p>Indicates whether the target user is a VIP user.</p>
<pre class="language-javascript"><code>isVip(): boolean;</code></pre>
<p>Returns <code class="language-typescript">true</code> if <code class="language-typescript">LocationApproval#getCaller</code> returns user designated as VIP; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="mcetoc_1gdgm195s1a">getDefaultApprovalGroup</h2>
<p>Looks up the default approval group.</p>
<pre class="language-javascript"><code>getDefaultApprovalGroup(): GlideElementReference | undefined;</code></pre>
<p>Returns the<code class="language-typescript">GlideElementReference</code> for the default aproval group.</p>
<h2 id="mcetoc_1gdgm195s1b">getDefaultApprovalGroup (static)</h2>
<p>Looks up the default approval group.</p>
<pre class="language-javascript"><code>getDefaultApprovalGroup(source: GlideRecord | GlideElementReference): GlideElementReference | undefined;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{(string | GlideRecord | GlideElementReference)}</code> - The source object for the approval context.</li></ul>
<p>Returns the<code class="language-typescript">GlideElementReference</code> for the default aproval group.</p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Gives an Active Directory Distinguished Name context for many record types, including User, Group and</meta_description>
<number>KB0101008</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>DistinguishedNameContext API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 18:39:46</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>cddb5ac21b82d510ec0320efe54bcb2a</sys_id>
<sys_mod_count>4</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 20:10:08</sys_updated_on>
<sys_view_count>0</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Gives an Active Directory Distinguished Name context for many record types, including User, Group and Task-based records, to determine if they are associated with a Site 17 user or group that was imported from Active Directory.</p>
<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgqo3gd2" rel="nofollow">Sources</a></li><li><a href="#mcetoc_1gdglaivgo" rel="nofollow">Constructor</a></li><li><a href="#methods" rel="nofollow">Methods</a>
<ul><li><a href="#getsourcerecord" rel="nofollow">getSourceRecord</a></li><li><a href="#gettargetobject" rel="nofollow">getTargetObject</a></li><li><a href="#isgroup" rel="nofollow">isGroup</a></li><li><a href="#issite17user" rel="nofollow">isSite17User</a></li><li><a href="#issite17group" rel="nofollow">isSite17Group</a></li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgqo3gd2">Sources</h1>
<ul style="list-style-position: inside;"><li><a title="Script Include" href="/sys_script_include.do?sys_id&#61;b16dfee51bf681101497a820f54bcbb0" rel="nofollow">Script Include</a></li><li><a title="TypeScript (GitHub)" href="https://github.com/USASOC-HQ/site_17_server_side/blob/main/source/api/DistinguishedNameContext.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="mcetoc_1gdglaivgo">Constructor</h1>
<p>Creates a new <code class="language-typescript">DistinguishedNameContext</code> instance</p>
<pre class="language-javascript"><code>new DistinguishedNameContext(source: string | GlideRecord | GlideElementReference): DistinguishedNameContext;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{(string | GlideRecord | GlideElementReference)}</code>- The source of the Distinguished Name context</li></ul>
<h1 id="methods">Methods</h1>
<h2 id="getsourcerecord">getSourceRecord</h2>
<p>Gets the GlideRecord that is the source of this context.</p>
<pre class="language-javascript"><code>getSourceRecord(): GlideRecord;</code></pre>
<p>Returns the GlideRecord that is the source of this context.</p>
<h2 id="gettargetobject">getTargetObject</h2>
<p>Gets the <code class="language-typescript">sys_user</code> or <code class="language-typescript">sys_user_group</code> object that is the target of this context.</p>
<pre class="language-javascript"><code>getTargetObject(): GlideRecord | GlideElementReference | undefined;</code></pre>
<p>Returns the GlideRecord that is the target of this context.</p>
<h2 id="isgroup">isGroup</h2>
<p>Indicates whether the target object is a <code class="language-typescript">sys_user_group</code> or <code class="language-typescript">sys_user</code>.</p>
<pre class="language-javascript"><code>isGroup(): boolean;</code></pre>
<p>Returns <code class="language-typescript">true</code> if <code class="language-typescript">IDistinguishedNameContext#getTargetObject</code> returns a <code class="language-typescript">sys_user_group</code> <code class="language-typescript">GlideRecord</code> or <code class="language-typescript">GlideElementReference</code>; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="issite17user">isSite17User</h2>
<p>Indicates whether the target object is a <code class="language-typescript">sys_user</code> and it is considered a Site 17 user.</p>
<pre class="language-javascript"><code>isSite17User(): boolean;</code></pre>
<p>Returns <code class="language-typescript">true</code> if <code class="language-typescript">IDistinguishedNameContext#getTargetObject</code> returns a <code class="language-typescript">sys_user</code> <code class="language-typescript">GlideRecord</code> or <code class="language-typescript">GlideElementReference</code> and <code class="language-typescript">Site17Util#isUserDN</code> returns <code class="language-typescript">true</code> for the source property of the target object; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="issite17group">isSite17Group</h2>
<p>Indicates whether the target object is a <code class="language-typescript">sys_user_group</code> and it is considered a Site 17 group.</p>
<pre class="language-javascript"><code>isSite17Group(): boolean;</code></pre>
<p>Returns <code class="language-typescript">true</code> if <code class="language-typescript">IDistinguishedNameContext#getTargetObject</code> returns a <code class="language-typescript">sys_user_group</code> <code class="language-typescript">GlideRecord</code> or <code class="language-typescript">GlideElementReference</code> and <code class="language-typescript">Site17Util#isGroupDN</code> returns <code class="language-typescript">true</code> for the source property of the target object; otherwise, <code class="language-typescript">false</code>.</p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Helper API for test scripts in the Automated Test Framework. Table of Contents Sources Constructor Instance</meta_description>
<number>KB0101007</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>AtfHelper API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 18:28:07</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>2cd616421b82d510ec0320efe54bcb15</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 19:58:48</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Helper API for test scripts in the <a href="https://docs.servicenow.com/bundle/sandiego-application-development/page/administer/auto-test-framework/concept/automated-test-framework.html" rel="nofollow">Automated Test Framework</a>.</p>
<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgkn4m637" rel="nofollow">Sources</a></li><li><a href="#mcetoc_1gdgklv162i" rel="nofollow">Constructor</a></li><li><a href="#mcetoc_1gdgklv162j" rel="nofollow">Instance Methods</a><br />
<ul><li><a href="#mcetoc_1gdgklv162k" rel="nofollow">setFailed</a></li><li><a href="#mcetoc_1gdgklv162l" rel="nofollow">getRecordIdFromStep</a></li><li><a href="#mcetoc_1gdgklv162m" rel="nofollow">Instance Example</a></li></ul>
</li><li><a href="#mcetoc_1gdgklv162n" rel="nofollow">Static Methods</a><br />
<ul><li><a href="#mcetoc_1gdgklv162o" rel="nofollow">relativeDayAt</a></li><li><a href="#mcetoc_1gdgklv162p" rel="nofollow">endOfRelativeDay</a></li><li><a href="#mcetoc_1gdgklv162q" rel="nofollow">isNil</a></li><li><a href="#mcetoc_1gdgklv162r" rel="nofollow">areAnyNil</a></li><li><a href="#mcetoc_1gdgklv162s" rel="nofollow">typeOfEx</a></li><li><a href="#mcetoc_1gdgklv162t" rel="nofollow">createPseudoCodeBuilder</a></li></ul>
</li><li><a href="#mcetoc_1gdgklv162u" rel="nofollow">PseudoCodeBuilder Methods</a><br />
<ul><li><a href="#mcetoc_1gdgklv162v" rel="nofollow">getComment</a></li><li><a href="#mcetoc_1gdgklv1630" rel="nofollow">setComment</a></li><li><a href="#mcetoc_1gdgklv1631" rel="nofollow">statement</a></li><li><a href="#mcetoc_1gdgklv1632" rel="nofollow">previous</a></li><li><a href="#mcetoc_1gdgklv1633" rel="nofollow">appendStatement</a></li><li><a href="#mcetoc_1gdgklv1634" rel="nofollow">toString</a></li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgkn4m637">Sources</h1>
<ul style="list-style-position: inside;"><li><a title="Script Include" href="/sys_script_include.do?sys_id&#61;446aad9897d11110d87839000153afb0" rel="nofollow">Script Include</a></li><li><a title="TypeScript (GitHub)" href="https://github.com/USASOC-HQ/site_17_server_side/blob/main/source/api/AtfHelper.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="mcetoc_1gdgklv162i">Constructor</h1>
<pre class="language-typescript"><code>new AtfHelper(steps: sn_atf.ITestStepsFunc, stepResult: sn_atf.ITestStepResult);</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>steps</var></strong>: <code class="language-typescript">{sn_atf.ITestStepsFunc}</code> - The function provided by the Automated Test Framework to get the results of previous test steps.</li><li><strong><var>stepResult</var></strong>: <code class="language-typescript">{sn_atf.ITestStepResult}</code> - The object provided by the Automated Test Framework to indicate test step results.</li></ul>
<h1 id="mcetoc_1gdgklv162j">Instance Methods</h1>
<h2 id="mcetoc_1gdgklv162k">setFailed</h2>
<p>Sets the result message and sets the step result to failed.<br />When this method is invoked on the associated test result object, an exception may be thrown.</p>
<pre class="language-typescript"><code>setFailed(reason: string, e: any): void;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>reason</var></strong>: <code class="language-typescript">{string}</code> - Explains why the test failed.</li><li><strong><var>e</var></strong>: <code class="language-typescript">{any}</code> - The error that caused the failure.</li></ul>
<h2 id="mcetoc_1gdgklv162l">getRecordIdFromStep</h2>
<p>Asserts the record id (Sys ID) from the results of a previous test step.<br />This will invoke the setFailed method if there is no record_id from the referenced test step results, which results in an exception being thrown.<br />If the referenced test step results could not be found or it does not define a record_id, then the setFailed method is invoked on the associated test result object, and an exception will be thrown.</p>
<pre class="language-typescript"><code>getRecordIdFromStep(sys_id: string): string | undefined;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>sys_id</var></strong>: <code class="language-typescript">{string}</code> - The Sys ID of a preceding test step.</li></ul>
<p>Returns the record id (Sys ID) from the results of a previous test step.</p>
<h2 id="mcetoc_1gdgklv162m">Instance Example</h2>
<pre class="language-javascript"><code>namespace site17Util_DistinguishedNameTest {
    declare var outputs: sn_atf.ITestStepOutputs;
    declare function steps(sys_id: string): sn_atf.ITestStepOutputs;
    declare var stepResult: sn_atf.ITestStepResult;
    declare function assertEqual(assertion: sn_atf.ITestAssertion): void;
    (function(outputs: sn_atf.ITestStepOutputs, steps: sn_atf.ITestStepsFunc, stepResult: sn_atf.ITestStepResult, assertEqual: sn_atf.IAssertEqualFunc): boolean {

        var atfHelper &#61; new x_g_inte_site_17.AtfHelper(steps, stepResult);

        var sys_id;
        try {
            sys_id &#61; atfHelper.getRecordIdFromStep(&#39;dc117523a4f940569a71dd22f95cd338&#39;);
            myFunc();
        } catch (e) {
            atfHelper.setFailed(&#34;Unexpected Error&#34;, e);
            return false;
        }

        return true;
    })(outputs, steps, stepResult, assertEqual);
}</code></pre>
<h1 id="mcetoc_1gdgklv162n">Static Methods</h1>
<h2 id="mcetoc_1gdgklv162o">relativeDayAt</h2>
<p>Gets a date/time string that is of a specific time, and is relative to the current date.</p>
<pre class="language-typescript"><code>relativeDayAt(daysFromToday: number, hours: number, minutes: number, seconds?: number): string;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>daysFromToday</var></strong>: <code class="language-typescript">{number}</code> - The relative number of days.</li><li><strong><var>hours</var></strong>: <code class="language-typescript">{number}</code> - The hours for the specific time of day.</li><li><strong><var>minutes</var></strong>: <code class="language-typescript">{number}</code> - The minutes for the specific time of day.</li><li><strong><var>seconds</var></strong> (optional): <code class="language-typescript">{number}</code> - The seconds for the specific time of day</li></ul>
<p>Returns a date/time string representing the specific time of date, relative to today&#39;s date.</p>
<p>Example:</p>
<pre class="language-javascript"><code>// Gets date/time string for yesterday at noon.
var dateString &#61;  x_g_inte_site_17.AtfHelper.relativeDayAt(-1, 12, 0);</code></pre>
<h2 id="mcetoc_1gdgklv162p">endOfRelativeDay</h2>
<p>Gets a date/time string that represents the end of the day, relative to the current date.</p>
<pre class="language-typescript"><code>endOfRelativeDay(daysFromToday: number): string;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>daysFromToday</var></strong>: <code class="language-typescript">{number}</code> - The relative number of days.</li></ul>
<p>Returns a date/time string representing the end of the day, relative to today&#39;s date.</p>
<p>Example:</p>
<pre class="language-javascript"><code>// Gets date/time string for end of day before yesterday.
var dateString &#61; x_g_inte_site_17.AtfHelper.endOfRelativeDay(-2);</code></pre>
<h2 id="mcetoc_1gdgklv162q">isNil</h2>
<p>Tests whether a value represents an <code class="language-typescript">undefined</code>, <code class="language-typescript">null</code>, <code class="language-typescript">NaN</code>, an empty string value.</p>
<pre class="language-typescript"><code>isNil(obj: any | undefined): obj is undefined | null | &#34;&#34;;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>obj</var></strong>: <code class="language-typescript">{(any | undefined)}</code> - The value to test.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the value is <code class="language-typescript">undefined</code>, <code class="language-typescript">null</code>, <code class="language-typescript">NaN</code>, an empty string, an uninitialized <code class="language-typescript">GlideRecord</code> or a nil <code class="language-typescript">GlideElement</code>; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="mcetoc_1gdgklv162r">areAnyNil</h2>
<p>Tests whether any values represent an <code class="language-typescript">undefined</code>, <code class="language-typescript">null</code>, <code class="language-typescript">NaN</code>, an empty string value.</p>
<pre class="language-typescript"><code>areAnyNil(...obj: (any | undefined)[]): boolean;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>obj</var></strong>: <code class="language-typescript">{(...(any | undefined)[])}</code> - The value(s) to test.</li></ul>
<p>Returns <code class="language-typescript">true</code> if any value is <code class="language-typescript">undefined</code>, <code class="language-typescript">null</code>, <code class="language-typescript">NaN</code>, an empty string, an uninitialized <code class="language-typescript">GlideRecord</code> or a nil <code class="language-typescript">GlideElement</code>; otherwise, <code class="language-typescript">false</code>.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var hasNil &#61; x_g_inte_site_17.AtfHelper.areAnyNil(var1, var2, var3);</code></pre>
<h2 id="mcetoc_1gdgklv162s">typeOfEx</h2>
<p>Gets the type of a value, distinguishing whether an object is null.</p>
<pre class="language-typescript"><code>typeOfEx(obj: any | undefined): &#34;null&#34; | &#34;string&#34; | &#34;number&#34; | &#34;bigint&#34; | &#34;boolean&#34; | &#34;symbol&#34; | &#34;undefined&#34; | &#34;object&#34; | &#34;function&#34;;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>obj</var></strong>: <code class="language-typescript">{(any | undefined)}</code> - The target value.</li></ul>
<p>Returns literal string <code class="language-typescript">&#34;null&#34;</code> if the value is <code class="language-typescript">null</code>; otherwise, it returns the result of the <code class="language-typescript">typeof</code> statement <code class="language-typescript">(&#34;string&#34; | &#34;number&#34; | &#34;bigint&#34; | &#34;boolean&#34; | &#34;symbol&#34; | &#34;undefined&#34; | &#34;object&#34; | &#34;function&#34;)</code>.</p>
<h2 id="mcetoc_1gdgklv162t">createPseudoCodeBuilder</h2>
<p>Creates a <code class="language-typescript">PseudoCodeBuilder</code> object from one or more pseudo-code statements.</p>
<pre class="language-typescript"><code>createPseudoCodeBuilder(statement: string, ...additionalStatements: string[]): PseudoCodeBuilder;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>statement</var></strong>: <code class="language-typescript">{string}</code> - Text reprsenting a pseudo-code statement.</li><li><strong><var>additionalStatements</var></strong>: <code class="language-typescript">{...string[]}</code> - Additional pseudo-code statements to append.</li></ul>
<p>Returns an object representing the last pseudo-code statement.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var psb &#61; x_g_inte_site_17.AtfHelper.createPseudoCodeBuilder(&#39;var gr &#61; new GlideRecord(&#34;sys_user&#34;)&#39;);</code></pre>
<h1 id="mcetoc_1gdgklv162u">PseudoCodeBuilder Methods</h1>
<h2 id="mcetoc_1gdgklv162v">getComment</h2>
<p>Gets the comment associated with the current pseudo-code statement.</p>
<pre class="language-typescript"><code>getComment(): string | undefined;</code></pre>
<p>Returns the comment string or undefined if there is no comment.</p>
<h2 id="mcetoc_1gdgklv1630">setComment</h2>
<p>Sets the comment associated with the current pseudo-code statement.</p>
<pre class="language-typescript"><code>setComment(comment?: string | null): PseudoCodeBuilder;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>comment</var></strong> (optional): <code class="language-typescript">{(string | null | undefined)}</code> - The new comment for the current statement. Use no parameters, or a <code class="language-typescript">null</code>, <code class="language-typescript">undefined</code> or an empty string to clear the comment.</li></ul>
<p>Returns the current PseudoCodeBuilder for method chaining.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var psb &#61; x_g_inte_site_17.AtfHelper.createPseudoCodeBuilder(&#39;var gr &#61; new GlideRecord(&#34;sys_user&#34;)&#39;).setComment(&#39;new record&#39;);</code></pre>
<h2 id="mcetoc_1gdgklv1631">statement</h2>
<p>Gets the current pseudo-code statement.</p>
<pre class="language-typescript"><code>statement(): string;</code></pre>
<p>Returns the text representing the current pseudo-code statement.</p>
<h2 id="mcetoc_1gdgklv1632">previous</h2>
<p>Gets the preceding pseudo-code statement.</p>
<pre class="language-typescript"><code>previous(): PseudoCodeBuilder | undefined;</code></pre>
<p>Returns the <code class="language-typescript">PseudoCodeBuilder</code> for the preceding pseudo-code statement or <code class="language-typescript">undefined</code> if this current statement is the first statement in the sequence.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var curPsb &#61; x_g_inte_site_17.AtfHelper.createPseudoCodeBuilder(&#39;var gr &#61; new GlideRecord(&#34;sys_user&#34;)&#39;).appendStatement(&#39;gr.get(sys_id)&#39;);
gs.info(curPsb.statement()); // writes &#39;gr.get(sys_id)&#39;
var prevPsb &#61; curPsb.previous();
gs.info(prevPsb.statement()); // writes &#39;var gr &#61; new GlideRecord(&#34;sys_user&#34;)&#39;</code></pre>
<h2 id="mcetoc_1gdgklv1633">appendStatement</h2>
<p>Appends a pseudo-code statement after the current statement.</p>
<pre class="language-typescript"><code>appendStatement(statement: string, ...additionalStatements: string[]): PseudoCodeBuilder;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>statement</var></strong>: <code class="language-typescript">{string}</code> - The text representing a pseudo-code statement.</li><li><strong><var>additionalStatements</var></strong>: <code class="language-typescript">{...string[]}</code> - Additional pseudo-code statements to append.</li></ul>
<p>Returns the new <code class="language-typescript">PseudoCodeBuilder</code> object representing the final pseudo-code statement.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var basePsb &#61; x_g_inte_site_17.AtfHelper.createPseudoCodeBuilder(&#39;var gr &#61; new GlideRecord(&#34;sys_user&#34;)&#39;);
var psb &#61; basePsb.appendStatement(&#39;gr.get(sys_id)&#39;);
gs.info(psb.statement()); // writes &#39;gr.get(sys_id)&#39;
gs.info(basePsb.statement()); // writes &#39;var gr &#61; new GlideRecord(&#34;sys_user&#34;)&#39;</code></pre>
<h2 id="mcetoc_1gdgklv1634">toString</h2>
<p>Gets a string representation of the current and all preceding pseudo-code statements.</p>
<pre class="language-typescript"><code>toString(): string;</code></pre>
<p>Returns the combination of the current all preceding pseudo-code statements joined by terminating <code class="language-typescript">&#39;;&#39;</code> and newline characters.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var psb &#61; x_g_inte_site_17.AtfHelper.createPseudoCodeBuilder(&#39;var gr &#61; new GlideRecord(&#34;sys_user&#34;)&#39;);
psb &#61; psb.appendStatement(&#39;gr.setValue(&#34;contact&#34;, sys_id)&#39;).comment(&#39;user id&#39;).appendStatement(&#39;gr.query()&#39;);
gs.info(psb.toString()) // writes &#34;var gr &#61; new GlideRecord(\&#34;sys_user\&#34;);\ngr.setValue(\&#34;contact\&#34;, sys_id); // user id\ngr.query()&#34;</code></pre>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Table of Contents Sources Methods isUser isGroup isVip isBusinessUnit isDepartment isCompany isLocation</meta_description>
<number>KB0101006</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>Site17Util API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 16:51:29</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>107506461b42d510ec0320efe54bcb14</sys_id>
<sys_mod_count>5</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 19:50:46</sys_updated_on>
<sys_view_count>4</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgise0s2" rel="nofollow">Sources</a></li><li><a href="#methods" rel="nofollow">Methods</a><br />
<ul><li><a href="#isuser" rel="nofollow">isUser</a></li><li><a href="#isgroup" rel="nofollow">isGroup</a></li><li><a href="#isvip" rel="nofollow">isVip</a></li><li><a href="#isbusinessunit" rel="nofollow">isBusinessUnit</a></li><li><a href="#isdepartment" rel="nofollow">isDepartment</a></li><li><a href="#iscompany" rel="nofollow">isCompany</a></li><li><a href="#islocation" rel="nofollow">isLocation</a></li><li><a href="#isbuilding" rel="nofollow">isBuilding</a></li><li><a href="#getbusinessunit" rel="nofollow">getBusinessUnit</a></li><li><a href="#getcompany" rel="nofollow">getCompany</a></li><li><a href="#getlocation" rel="nofollow">getLocation</a></li><li><a href="#getcaller" rel="nofollow">getCaller</a></li><li><a href="#testdistinguishedname" rel="nofollow">testDistinguishedName</a></li><li><a href="#isdncontainedby" rel="nofollow">isDnContainedBy</a></li><li><a href="#getuserscontainerdn" rel="nofollow">getUsersContainerDN</a></li><li><a href="#getgroupscontainerdn" rel="nofollow">getGroupsContainerDN</a></li><li><a href="#includeemptyusersource" rel="nofollow">includeEmptyUserSource</a></li><li><a href="#includeemptygroupsource" rel="nofollow">includeEmptyGroupSource</a></li><li><a href="#isuserdn" rel="nofollow">isUserDN</a></li><li><a href="#isgroupdn" rel="nofollow">isGroupDN</a></li><li><a href="#issite17user" rel="nofollow">isSite17User</a></li><li><a href="#issite17group" rel="nofollow">isSite17Group</a></li><li><a href="#filteriterator" rel="nofollow">filterIterator</a></li><li><a href="#reiterate" rel="nofollow">reiterate</a></li><li><a href="#mapiterator" rel="nofollow">mapIterator</a></li><li><a href="#reduceiterator" rel="nofollow">reduceIterator</a></li><li><a href="#firstiterated" rel="nofollow">firstIterated</a></li><li><a href="#firstiteratedordefault" rel="nofollow">firstIteratedOrDefault</a></li><li><a href="#limititerator" rel="nofollow">limitIterator</a></li><li><a href="#iteratortoarray" rel="nofollow">iteratorToArray</a></li><li><a href="#iteratorfromarray" rel="nofollow">iteratorFromArray</a></li><li><a href="#isdncontainedby-asynchronous" rel="nofollow">isDnContainedBy (asynchronous)</a></li><li><a href="#getuserscontainerdn-asynchronous" rel="nofollow">getUsersContainerDN (asynchronous)</a></li><li><a href="#getgroupscontainerdn-asynchronous" rel="nofollow">getGroupsContainerDN (asynchronous)</a></li><li><a href="#includeemptyusersource-asynchronous" rel="nofollow">includeEmptyUserSource (asynchronous)</a></li><li><a href="#includeemptygroupsource-asynchronous" rel="nofollow">includeEmptyGroupSource (asynchronous)</a></li><li><a href="#isuserdn-asynchronous" rel="nofollow">isUserDN (asynchronous)</a></li><li><a href="#isgroupdn-asynchronous" rel="nofollow">isGroupDN (asynchronous)</a></li><li><a href="#issite17user-asynchronous" rel="nofollow">isSite17User (asynchronous)</a></li><li><a href="#issite17group-asynchronous" rel="nofollow">isSite17Group (asynchronous)</a></li></ul>
</li><li><a href="#callback-function-types" rel="nofollow">Callback Function Types</a><br />
<ul><li><a href="#ithrowfunc" rel="nofollow">IThrowFunc</a></li><li><a href="#iiterationpredicate" rel="nofollow">IIterationPredicate</a></li><li><a href="#iiteratornextcallback" rel="nofollow">IIteratorNextCallback</a></li><li><a href="#imapfunc" rel="nofollow">IMapFunc</a></li><li><a href="#ireducerfunc" rel="nofollow">IReducerFunc</a></li><li><a href="#ipredicate" rel="nofollow">IPredicate</a></li><li><a href="#iiteratorthrowhandler" rel="nofollow">IIteratorThrowHandler</a></li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgise0s2">Sources</h1>
<ul><li><a title="Site17Util" href="/sys_script_include.do?sys_id&#61;0a888dc51bd74950ec0320efe54bcb61" rel="nofollow">Script Include</a></li><li><a title="TypeScript Source" href="https://github.com/USASOC-HQ/site_17_server_side/blob/main/source/api/Site17Util.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="methods">Methods</h1>
<h2 id="isuser">isUser</h2>
<p>Tests whether the record or element represents a User record (<code class="language-typescript">sys_user</code>).</p>
<pre class="language-typescript"><code>isUser(target: GlideRecord | GlideElementReference): target is sys_userElement | sys_userGlideRecord;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the target record or element is a User record; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="isgroup">isGroup</h2>
<p>Tests whether the record or element represents a Group record (sys_user_group).</p>
<pre class="language-typescript"><code>isGroup(target: GlideRecord | GlideElementReference): target is sys_user_groupElement | sys_user_groupGlideRecord;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{( GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the target record or element is a Group record; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="isvip">isVip</h2>
<p>Tests whether the record or element is a VIP user or is associated with a VIP user. If the target is not itself a sys_user record or element, this checks the properties of the following record types to determine the associated user:</p>
<ul style="list-style-position: inside;"><li>Incident Caller: <code class="language-typescript">incident.caller_id</code> and <code class="language-typescript">incident_task.incident.caller_id</code></li><li>Requested For: <code class="language-typescript">sc_request.requested_for</code>, <code class="language-typescript">sc_req_item.request.requested_for</code> and <code class="language-typescript">sc_task.request.requested_for</code></li><li>Opened For: <code class="language-typescript">sm_order.opened_for</code> and <code class="language-typescript">sn_si_incident.opened_for</code></li><li>Move User: <code class="language-typescript">change_request_imac.move_user</code></li><li>Affected User: <code class="language-typescript">sm_order.affected_user</code>, <code class="language-typescript">sn_si_incident.affected_user</code> and <code class="language-typescript">sn_si_task.affected_user</code></li></ul>
<pre class="language-typescript"><code>isVip(target: GlideRecord | GlideElementReference): boolean;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the target record or element is a VIP user or if the user that is the target (ie. caller, requestor) of that record is a VIP user;<br />otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="isbusinessunit">isBusinessUnit</h2>
<p>Tests whether the record or element represents a Business Unit record (business_unit).</p>
<pre class="language-typescript"><code>isBusinessUnit(target: GlideRecord | GlideElementReference): target is business_unitElement | business_unitGlideRecord;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the target record or element is a Business Unit record; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="isdepartment">isDepartment</h2>
<p>Tests whether the record or element represents a Department record (cmn_department).</p>
<pre class="language-typescript"><code>isDepartment(target: GlideRecord | GlideElementReference): target is cmn_departmentElement | cmn_departmentGlideRecord;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns true if the target record or element is a Department record; otherwise, false.</p>
<h2 id="iscompany">isCompany</h2>
<p>Tests whether the record or element represents a Company record (core_company).</p>
<pre class="language-typescript"><code>isCompany(target: GlideRecord | GlideElementReference): target is core_companyElement | core_companyGlideRecord;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns true if the target record or element is Company Group record; otherwise, false.</p>
<h2 id="islocation">isLocation</h2>
<p>Tests whether the record or element represents a Location record (cmn_location).</p>
<pre class="language-typescript"><code>isLocation(target: GlideRecord | GlideElementReference): target is cmn_locationElement | cmn_locationGlideRecord;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns true if the target record or element is a Location record; otherwise, false.</p>
<h2 id="isbuilding">isBuilding</h2>
<p>Tests whether the record or element represents a Building record (cmn_building).</p>
<pre class="language-typescript"><code>isBuilding(target: GlideRecord | GlideElementReference): target is cmn_buildingGlideRecord | cmn_buildingElement;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns true if the target record or element is a Building record; otherwise, false.</p>
<h2 id="getbusinessunit">getBusinessUnit</h2>
<p>Gets the Business Unit record (business_unit) associated with the target glide record or element.</p>
<p>This will search the associated fields of many records to determine the associated business unit, if necessary.</p>
<pre class="language-typescript"><code>getBusinessUnit(target: GlideRecord | GlideElementReference): business_unitGlideRecord | undefined;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns the Glide record of the associated business unit or <code class="language-typescript">undefined</code> if the associated business unit was nil or could not be determined.</p>
<h2 id="getcompany">getCompany</h2>
<p>Gets the Company record (core_company) associated with the target glide record or element.</p>
<p>This will search the associated fields of many records to determine the associated company, if necessary.</p>
<pre class="language-typescript"><code>getCompany(target: GlideRecord | GlideElementReference): core_companyGlideRecord | undefined;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns the Glide record of the associated company or <code class="language-typescript">undefined</code> if the associated company was nil or could not be determined.</p>
<h2 id="getlocation">getLocation</h2>
<p>Gets the Location record (cmn_location) associated with the target glide record or element.</p>
<p>This will search the associated fields of many records to determine the associated location, if necessary.</p>
<pre class="language-typescript"><code>getLocation(target: GlideRecord | GlideElementReference): cmn_locationGlideRecord | undefined;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns the Glide record of the associated location or <code class="language-typescript">undefined</code> if the associated location was nil or could not be determined.</p>
<h2 id="getcaller">getCaller</h2>
<p>Gets the User record (<code class="language-typescript">sys_user</code>) associated with the target glide record or element.</p>
<p>If the target is not itself a <code class="language-typescript">sys_user</code> record or element, this checks the properties of the following record types to determine the associated user:</p>
<ul style="list-style-position: inside;"><li>Incident Caller: <code class="language-typescript">incident.caller_id</code> and <code class="language-typescript">incident_task.incident.caller_id</code></li><li>Requested For: <code class="language-typescript">sc_request.requested_for</code>, <code class="language-typescript">sc_req_item.request.requested_for</code> and <code class="language-typescript">sc_task.request.requested_for</code></li><li>Opened For: <code class="language-typescript">sm_order.opened_for</code> and <code class="language-typescript">sn_si_incident.opened_for</code></li><li>Move User: <code class="language-typescript">change_request_imac.move_user</code></li><li>Affected User: <code class="language-typescript">sm_order.affected_user</code>, <code class="language-typescript">sn_si_incident.affected_user</code> and <code class="language-typescript">sn_si_task.affected_user</code></li></ul>
<pre class="language-typescript"><code>getCaller(target: GlideRecord | GlideElementReference): sys_userGlideRecord | undefined;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>target</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference)}</code> - The glide record or reference element.</li></ul>
<p>Returns the Glide record of the associated user or <code class="language-typescript">undefined</code> if the associated user was nil or could not be determined.</p>
<h2 id="testdistinguishedname">testDistinguishedName</h2>
<p>Checks whether a string contains a valid LDAP Distinguished Name.</p>
<pre class="language-typescript"><code>testDistinguishedName(value?: java.lang.String | string | null): boolean;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: <code class="language-typescript">{(java.lang.String | string | null | undefined)}</code> - The target string value.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the given string represents a valid LDAP distinguished name; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="isdncontainedby">isDnContainedBy</h2>
<p>Determines whether a specified DistinguishedName is contained within another.</p>
<pre class="language-typescript"><code>isDnContainedBy(sourceDN?: java.lang.String | string | null, containerDN?: java.lang.String | string | null): boolean;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>sourceDN</var></strong>: <code class="language-typescript">{(java.lang.String | string | null | undefined)}</code> - The DistinguishedName to check.</li><li><strong><var>containerDN</var></strong>: <code class="language-typescript">{(java.lang.String | string | null | undefined)}</code> - The parent DistinguishedName.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the source DN is contained within the container DN; otherwise, <code class="language-typescript">false</code>.</p>
<p>Example:</p>
<pre class="language-javascript"><code>gs.info(x_g_inte_site_17.Site17Util.isDnContainedBy(&#34;CN&#61;Joey Bag O&#39; Donuts,OU&#61;Sales,DC&#61;Fabrikam,DC&#61;COM&#34;, &#34;DC&#61;Fabrikam,DC&#61;COM&#34;)); // writes true
    gs.info(x_g_inte_site_17.Site17Util.isDnContainedBy(&#34;CN&#61;Joey Bag O&#39; Donuts,OU&#61;Sales,DC&#61;Fabrikam,DC&#61;COM&#34;, &#34;DC&#61;Cloud,DC&#61;Fabrikam,DC&#61;COM&#34;)); // writes false</code></pre>
<h2 id="getuserscontainerdn">getUsersContainerDN</h2>
<p>Gets the LDAP Distinguished Name of the container for all Site 17 users.</p>
<pre class="language-typescript"><code>getUsersContainerDN(): string;</code></pre>
<p>Returns the value of the <code class="language-typescript">x_g_inte_site_17.source_dn_users</code> system property or an empty string if the property is not defined.</p>
<h2 id="getgroupscontainerdn">getGroupsContainerDN</h2>
<p>Gets the LDAP Distinguished Name of the container for all Site 17 groups.</p>
<pre class="language-typescript"><code>getGroupsContainerDN(): string;</code></pre>
<p>Returns the value of the <code class="language-typescript">x_g_inte_site_17.source_dn_groups</code> system property or an empty string if the property is not defined.</p>
<h2 id="includeemptyusersource">includeEmptyUserSource</h2>
<p>Gets a value indicating whether the user records with an empty Source property are considered Site 17 users.</p>
<pre class="language-typescript"><code>includeEmptyUserSource(): boolean;</code></pre>
<p>Returns <code class="language-typescript">true</code> if the <code class="language-typescript">x_g_inte_site_17.source_user_include_empty</code> system property is set to <code class="language-typescript">&#34;true&#34;</code>; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="includeemptygroupsource">includeEmptyGroupSource</h2>
<p>Gets a value indicating whether the group records with an empty Source property are considered Site 17 groups.</p>
<pre class="language-typescript"><code>includeEmptyGroupSource(): boolean;</code></pre>
<p>Returns <code class="language-typescript">true</code> if the <code class="language-typescript">x_g_inte_site_17.source_group_include_empty</code> system property is set to <code class="language-typescript">&#34;true&#34;</code>; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="isuserdn">isUserDN</h2>
<p>Tests whether a given LDAP Distinguished Name is to be considered that of a Site 17 user.</p>
<pre class="language-typescript"><code>isUserDN(sourceDN?: java.lang.String | string | null): boolean;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>sourceDN</var></strong>: <code class="language-typescript">{(java.lang.String | string | null | undefined)}</code> - The LDAP Distinguished Name.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the given DN is for a Site 17 user; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="isgroupdn">isGroupDN</h2>
<p>Tests whether a given LDAP Distinguished Name is to be considered that of a Site 17 group.</p>
<pre class="language-typescript"><code>isGroupDN(sourceDN?: java.lang.String | string | null): boolean;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>sourceDN</var></strong> (optional): <code class="language-typescript">{(java.lang.String | string | null | undefined)}</code> - The LDAP Distinguished Name.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the given DN is for a Site 17 group; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="issite17user">isSite17User</h2>
<p>Tests whether the given glide record or element is to be considered a Site 17 user.</p>
<pre class="language-typescript"><code>isSite17User(source?: GlideRecord | GlideElementReference | java.lang.String | string | null): source is sys_userElement | sys_userGlideRecord;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference | java.lang.String | string | null | undefined)}</code> - The glide record or reference element.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the given glide record element is for a Site 17 user; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="issite17group">isSite17Group</h2>
<p>Tests whether the given glide record or element is to be considered a Site 17 group.</p>
<pre class="language-typescript"><code>isSite17Group(source?: GlideRecord | GlideElementReference | java.lang.String | string | null): source is sys_user_groupElement | sys_user_groupGlideRecord;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{(GlideRecord | GlideElementReference | java.lang.String | string | null | undefined)}</code> - The glide record or reference element.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the given glide record element is for a Site 17 group; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="filteriterator">filterIterator</h2>
<p>Creates a new <code class="language-typescript">Iterator</code> which is a filtered result set of a given <code class="language-typescript">Iterator</code>.</p>
<pre class="language-typescript"><code>filterIterator&lt;TYield&gt;(source: Iterator&lt;TYield&gt;, predicate: IIterationPredicate&lt;TYield&gt;): Iterator&lt;TYield&gt;;
    filterIterator&lt;TYield, TReturn&gt;(source: Iterator&lt;TYield, TReturn&gt;, predicate: IIterationPredicate&lt;TYield&gt;): Iterator&lt;TYield, TReturn&gt;;
    filterIterator&lt;TYield, TReturn, TNext&gt;(source: Iterator&lt;TYield, TReturn, TNext&gt;, predicate: IIterationPredicate&lt;TYield, TNext&gt;): Iterator&lt;TYield, TReturn, TNext&gt;;
    filterIterator&lt;TYield, TReturn, TNext, TThis&gt;(source: Iterator&lt;TYield, TReturn, TNext&gt;, predicate: IIterationPredicate&lt;TYield, TNext, TThis&gt;, thisArg: TThis): Iterator&lt;TYield, TReturn, TNext&gt;;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The yielded result type for the iterator.</li><li>TReturn (optional, default: <code class="language-typescript">any</code>): The final value type for the iterator.</li><li><strong><var>TNext</var></strong> (optional): The parameter type for obtaining a yielded result.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TYield, TReturn, TNext&gt;}</code> - The source iterator.</li><li><strong><var>predicate</var></strong>: <a href="#iiterationpredicate" rel="nofollow"><code class="language-typescript">{IIterationPredicate&lt;TYield, TNext, TThis&gt;}</code></a> - Determines whether a value will be yielded in the result iterator.</li><li><strong><var>thisArg</var></strong> (optional): <code class="language-typescript">{(TThis | undefined)}</code> - An object to which the <code class="language-typescript">this</code> keyword can refer in the predicate function.</li></ul>
<p>Returns the <code class="language-typescript">Iterator</code> yielding filtered results.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var filtered &#61; x_g_inte_site_17.Site17Util.filterIterator&lt;string&gt;(myStringIterator, function(value: string, ...args: [] | [undefined]): boolean {
        return typeof value &#61;&#61;&#61; &#39;string&#39; &amp;&amp; value.trim().length &gt; 0;
    }</code></pre>
<h2 id="reiterate">reiterate</h2>
<p>Creates a new iterator which applies a given function before each value is yielded.</p>
<pre>reiterate&lt;TYield&gt;(source: Iterator&lt;TYield&gt;, callbackFn: IIteratorNextCallback&lt;TYield&gt;): Iterator&lt;TYield&gt;;
    reiterate&lt;TYield, TReturn&gt;(source: Iterator&lt;TYield, TReturn&gt;, callbackFn: IIteratorNextCallback&lt;TYield&gt;): Iterator&lt;TYield, TReturn&gt;;
    reiterate&lt;TYield, TReturn, TNext&gt;(source: Iterator&lt;TYield, TReturn, TNext&gt;, callbackFn: IIteratorNextCallback&lt;TYield, TNext&gt;): Iterator&lt;TYield, TReturn, TNext&gt;;
    reiterate&lt;TYield, TReturn, TNext, TThis&gt;(source: Iterator&lt;TYield, TReturn, TNext&gt;, callbackFn: IIteratorNextCallback&lt;TYield, TNext, TThis&gt;, thisArg: TThis): Iterator&lt;TYield, TReturn, TNext&gt;;</pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The yielded result type for the iterator.</li><li>TReturn (optional, default: <code class="language-typescript">any</code>): The final value type for the iterator.</li><li><strong><var>TNext</var></strong> (optional): The parameter type for obtaining a yielded result.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TYield, TReturn, TNext&gt;}</code> - The source iterator.</li><li><strong><var>callbackFn</var></strong>: <a href="#iiteratornextcallback" rel="nofollow"><code class="language-typescript">{IIteratorNextCallback&lt;TYield, TNext, TThis&gt;}</code></a> - The function that is applied to each value before it is yielded in the result iterator.</li><li><strong><var>thisArg</var></strong> (optional): <code class="language-typescript">{(TThis | undefined)}</code> - An object to which the <code class="language-typescript">this</code> keyword can refer in the predicate function.</li></ul>
<p>Returns a wrapper for the original <code class="language-typescript">Iterator</code>.</p>
<h2 id="mapiterator">mapIterator</h2>
<p>Maps the yielded results of an iterator to another value or type.</p>
<pre class="language-typescript"><code>mapIterator&lt;TInput, TYield&gt;(source: Iterator&lt;TInput&gt;, mapper: IMapFunc&lt;TInput, TYield&gt;): Iterator&lt;TYield&gt;;
    mapIterator&lt;TInput, TYield, TReturn&gt;(source: Iterator&lt;TInput, TReturn&gt;, mapper: IMapFunc&lt;TInput, TYield&gt;): Iterator&lt;TYield, TReturn&gt;;
    mapIterator&lt;TInput, TYield, TReturn, TNext&gt;(source: Iterator&lt;TInput, TReturn, TNext&gt;, mapper: IMapFunc&lt;TInput, TYield, TNext&gt;): Iterator&lt;TYield, TReturn, TNext&gt;;
    mapIterator&lt;TInput, TYield, TReturn, TNext, TThis&gt;(source: Iterator&lt;TInput, TReturn, TNext&gt;, mapper: IMapFunc&lt;TInput, TYield, TNext, TThis&gt;, thisArg: TThis): Iterator&lt;TYield, TReturn, TNext&gt;;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TInput</var></strong>: The yielded result type for the source iterator.</li><li><strong><var>TYield</var></strong>: The yielded result type for the mapped iterator.</li><li>TReturn (optional, default: <code class="language-typescript">any</code>): The final value type for the iterator.</li><li><strong><var>TNext</var></strong> (optional): The parameter type for obtaining a yielded result.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TInput, TReturn, TNext&gt;}</code> - The source iterator.</li><li><strong><var>mapper</var></strong>: <a href="#imapfunc" rel="nofollow"><code class="language-typescript">{IMapFunc&lt;TInput, TYield, TNext, TThis&gt;}</code></a> - A function that converts each value from the source iterator as it is yielded.</li><li><strong><var>thisArg</var></strong> (optional): <code class="language-typescript">{(TThis | undefined)}</code> - An object to which the <code class="language-typescript">this</code> keyword can refer in the predicate function.</li></ul>
<p>Returns an <code class="language-typescript">Iterator</code> with mapped values.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var stringIterator &#61; x_g_inte_site_17.Site17Util.mapIterator&lt;number, string&gt;(myNumberIterator, function(value: number, ...args: [] | [undefined]): string {
        return isNaN(value) ? &#34;&#34; : JSON.stringify(value);
    }</code></pre>
<h2 id="reduceiterator">reduceIterator</h2>
<p>Creates an aggregated value from all yielded values of an iterator.</p>
<pre class="language-typescript"><code>reduceIterator&lt;TInput, TAcc&gt;(source: Iterator&lt;TInput&gt;, initialValue: TAcc, reducerFn: IReducerFunc&lt;TAcc, TInput&gt;): TAcc;
    reduceIterator&lt;TInput, TAcc, TThis&gt;(source: Iterator&lt;TInput&gt;, initialValue: TAcc, reducerFn: IReducerFunc&lt;TAcc, TInput, TThis&gt;, thisArg: TThis): TAcc;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TInput</var></strong>: The yielded result type for the source iterator.</li><li><strong><var>TAcc</var></strong>: The type of aggregated value.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TInput&gt;}</code> - The source iterator.</li><li><strong><var>initialValue</var></strong>: <code class="language-typescript">{TAcc}</code> - The initial aggregated value.</li><li><strong><var>reducerFn</var></strong>: <a href="#ireducerfunc" rel="nofollow"><code class="language-typescript">{IReducerFunc&lt;TAcc, TInput, TThis&gt;}</code></a> - The function that calculates the aggregated value for each yielded iterator value.</li><li><strong><var>thisArg</var></strong> (optional): <code class="language-typescript">{(TThis | undefined)}</code> - An object to which the <code class="language-typescript">this</code> keyword can refer in the predicate function.</li></ul>
<p>Returns the final aggregated value.</p>
<p>Example:</p>
<pre class="language-javascript"><code>var trueCount &#61; x_g_inte_site_17.Site17Util.reduceIterator&lt;boolean, number&gt;(myBooleanIterator, 0, function(acc: number, cur: boolean): number {
        return cur ? acc : acc &#43; 1;
    }</code></pre>
<h2 id="firstiterated">firstIterated</h2>
<p>Gets the first yielded result from an iterator.</p>
<pre class="language-typescript"><code>firstIterated&lt;TYield&gt;(source: Iterator&lt;TYield&gt;, predicate?: IPredicate&lt;TYield&gt;): TYield | undefined;
    firstIterated&lt;TYield, TThis&gt;(source: Iterator&lt;TYield&gt;, predicate: IPredicate&lt;TYield, TThis&gt; | undefined, thisArg: TThis): TYield | undefined;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The yielded result type for the iterator.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TYield&gt;}</code> - The source iterator.</li><li><strong><var>predicate</var></strong> (optional): <a href="#ipredicate" rel="nofollow"><code class="language-typescript">{(IPredicate&lt;TYield, TThis&gt; | undefined)}</code></a> - Predicate that determines whether to ignore a yielded value.</li><li><strong><var>thisArg</var></strong> (optional): <code class="language-typescript">{(TThis | undefined)}</code> - An object to which the <code class="language-typescript">this</code> keyword can refer in the predicate function.</li></ul>
<p>Returns the first yielded result that wasn&#39;t filered out by the predicate.</p>
<h2 id="firstiteratedordefault">firstIteratedOrDefault</h2>
<p>Gets the first yielded or default result from an iterator.</p>
<pre class="language-typescript"><code>firstIteratedOrDefault&lt;TYield&gt;(source: Iterator&lt;TYield&gt;, ifEmpty: TYield | { (): TYield; }, predicate?: IPredicate&lt;TYield&gt;): TYield;
    firstIteratedOrDefault&lt;TYield, TThis&gt;(source: Iterator&lt;TYield&gt;, ifEmpty: TYield | { (this: TThis): TYield; }, predicate: IPredicate&lt;TYield, TThis&gt; | undefined, thisArg: TThis): TYield;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The yielded result type for the iterator.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TYield&gt;}</code> - The source iterator.</li><li><strong><var>ifEmpty</var></strong>: <code class="language-typescript">{(TYield | { (this: TThis): TYield; })}</code> - Default value or function that produces the default value if no value was yieled which was not filtered out.</li><li><strong><var>predicate</var></strong> (optional): <a href="#ipredicate" rel="nofollow"><code class="language-typescript">{(IPredicate&lt;TYield, TThis&gt; | undefined)}</code></a> - Predicate that determines whether to ignore a yielded value.</li><li><strong><var>thisArg</var></strong> (optional): <code class="language-typescript">{(TThis | undefined)}</code> - An object to which the <code class="language-typescript">this</code> keyword can refer in the predicate function.</li></ul>
<p>Returns the first yeilded value that was not filtered out or the default value.</p>
<h2 id="limititerator">limitIterator</h2>
<p>Creates a wrapper <code class="language-typescript">Iterator</code> that limits the number of iterations from a source iterator.</p>
<pre class="language-typescript"><code>limitIterator&lt;TYield&gt;(source: Iterator&lt;TYield&gt;, count: number): Iterator&lt;TYield&gt;;
    limitIterator&lt;TYield, TReturn&gt;(source: Iterator&lt;TYield, TReturn&gt;, count: number): Iterator&lt;TYield, TReturn&gt;;
    limitIterator&lt;TYield, TReturn, TNext&gt;(source: Iterator&lt;TYield, TReturn, TNext&gt;, count: number): Iterator&lt;TYield, TReturn, TNext&gt;;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The yielded result type for the mapped iterator.</li><li>TReturn (optional, default: <code class="language-typescript">any</code>): The final value type for the iterator.</li><li><strong><var>TNext</var></strong> (optional): The parameter type for obtaining a yielded result.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TYield, TReturn, TNext&gt;}</code> - The source iterator.</li><li><strong><var>count</var></strong>: <code class="language-typescript">{number}</code> - The maximum number of iterations.</li></ul>
<p>Returns a wrapper <code class="language-typescript">Iterator</code> with a limited number of iterations.</p>
<h2 id="iteratortoarray">iteratorToArray</h2>
<p>Converts the yielded values of an interator to an array.</p>
<pre class="language-typescript"><code>iteratorToArray&lt;TYield&gt;(source: Iterator&lt;TYield&gt;, limit?: number): TYield[];</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The yielded result type for the iterator.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>source</var></strong>: <code class="language-typescript">{Iterator&lt;TYield&gt;}</code> - The source iterator.</li><li><strong><var>limit</var></strong> (optional): <code class="language-typescript">{(number | undefined)}</code> - The maximum number of elements (iterations).</li></ul>
<p>Returns the yielded values of the iterator.</p>
<h2 id="iteratorfromarray">iteratorFromArray</h2>
<p>Creates an interator from an array.</p>
<pre class="language-typescript"><code>iteratorFromArray&lt;T&gt;(arr: T[], supportsReturn?: boolean, finalReturnValue?: TReturn, onThrow?: IIteratorThrowHandler): Iterator&lt;T&gt;;
    iteratorFromArray&lt;T, TReturn&gt;(arr: T[], supportsReturn?: boolean, finalReturnValue?: TReturn, onThrow?: IIteratorThrowHandler&lt;TReturn&gt;): Iterator&lt;T, TReturn&gt;;
    iteratorFromArray&lt;T, TReturn, TNext&gt;(arr: T[], supportsReturn?: boolean, finalReturnValue?: TReturn, onThrow?: IIteratorThrowHandler&lt;TReturn&gt;): Iterator&lt;T, TReturn, TNext&gt;;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>T</var></strong>: The element type.</li><li>TReturn (optional, default: <code class="language-typescript">any</code>): The return value type.</li><li><strong><var>TNext</var></strong> (optional): The parameter type for obtaining a yielded result.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>arr</var></strong>: T[] - The source array.</li><li><strong><var>supportsReturn</var></strong> (optional): <code class="language-typescript">{(boolean | undefined)}</code> - If <code class="language-typescript">true</code>, the iterator will implement the <code class="language-typescript">Iterator.return()</code> method.</li><li><strong><var>finalReturnValue</var></strong> (optional): <code class="language-typescript">{(TReturn | undefined)}</code> - The value to return with the iteration result when all items have been iterated.</li><li><strong><var>onThrow</var></strong> (optional): <a href="#iiteratorthrowhandler" rel="nofollow"><code class="language-typescript">{(IIteratorThrowHandler&lt;TReturn&gt; | undefined)}</code></a> - If defined, the iterator will implement <code class="language-typescript">Iterator.throw()</code> using this method to get the result value.</li></ul>
<p>Returns the <code class="language-typescript">Iterator</code> created from the array.</p>
<h2 id="isdncontainedby-asynchronous">isDnContainedBy (asynchronous)</h2>
<p>Determines whether a specified DistinguishedName is contained within another.</p>
<p>AJAX Parameter Names:</p>
<ul style="list-style-position: inside;"><li><code class="language-typescript">&#34;sys_parm_target_dn&#34;</code> - The DistinguishedName to check</li><li><code class="language-typescript">&#34;sys_parm_container_dn&#34;</code> - The parent DistinguishedName.</li></ul>
<p>Returns string value <code class="language-typescript">&#34;true&#34;</code> if the source DN is contained within the container DN; otherwise, <code class="language-typescript">&#34;false&#34;</code>.</p>
<h2 id="getuserscontainerdn-asynchronous">getUsersContainerDN (asynchronous)</h2>
<p>Gets the LDAP Distinguished Name of the container for all Site 17 users.</p>
<p>Returns the value of the <code class="language-typescript">x_g_inte_site_17.source_dn_users</code> system property or empty if the property is not defined.</p>
<h2 id="getgroupscontainerdn-asynchronous">getGroupsContainerDN (asynchronous)</h2>
<p>Gets the LDAP Distinguished Name of the container for all Site 17 groups.</p>
<p>Returns the value of the <code class="language-typescript">x_g_inte_site_17.source_dn_groups</code> system property or empty if the property is not defined.</p>
<h2 id="includeemptyusersource-asynchronous">includeEmptyUserSource (asynchronous)</h2>
<p>Gets a value indicating whether the user records with an empty Source property are considered Site 17 users.</p>
<p>Returns string value <code class="language-typescript">&#34;true&#34;</code> if the <code class="language-typescript">x_g_inte_site_17.source_user_include_empty</code> system property is set to <code class="language-typescript">&#34;true&#34;</code>; otherwise, <code class="language-typescript">&#34;false&#34;</code>.</p>
<h2 id="includeemptygroupsource-asynchronous">includeEmptyGroupSource (asynchronous)</h2>
<p>Gets a value indicating whether the group records with an empty Source property are considered Site 17 groups.</p>
<p>Returns string value <code class="language-typescript">&#34;true&#34;</code> if the <code class="language-typescript">x_g_inte_site_17.source_group_include_empty</code> system property is set to <code class="language-typescript">&#34;true&#34;</code>; otherwise, <code class="language-typescript">&#34;false&#34;</code>.</p>
<h2 id="isuserdn-asynchronous">isUserDN (asynchronous)</h2>
<p>Tests whether a given LDAP Distinguished Name is to be considered that of a Site 17 user.</p>
<p>AJAX Parameter Name:</p>
<ul style="list-style-position: inside;"><li><code class="language-typescript">&#34;sys_parm_target_dn&#34;</code> - The DistinguishedName to check.</li></ul>
<p>Returns string value <code class="language-typescript">&#34;true&#34;</code> if the given DN is for a Site 17 user; otherwise, <code class="language-typescript">&#34;false&#34;</code>.</p>
<h2 id="isgroupdn-asynchronous">isGroupDN (asynchronous)</h2>
<p>Tests whether a given LDAP Distinguished Name is to be considered that of a Site 17 group.</p>
<p>AJAX Parameter Name:</p>
<ul style="list-style-position: inside;"><li><code class="language-typescript">&#34;sys_parm_target_dn&#34;</code> - The DistinguishedName to check.</li></ul>
<p>Returns string value <code class="language-typescript">&#34;true&#34;</code> if the given DN is for a Site 17 group; otherwise, <code class="language-typescript">&#34;false&#34;</code>.</p>
<h2 id="issite17user-asynchronous">isSite17User (asynchronous)</h2>
<p>Tests whether a given sys_id is for a user record that is to be considered a Site 17 user.</p>
<p>AJAX Parameter Name:</p>
<ul style="list-style-position: inside;"><li><code class="language-typescript">&#34;sys_parm_user_id&#34;</code> - The SysID of a User (sys_user) record.</li></ul>
<p>Returns string value <code class="language-typescript">&#34;true&#34;</code> if the associated record is for a Site 17 user; otherwise, <code class="language-typescript">&#34;false&#34;</code>.</p>
<h2 id="issite17group-asynchronous">isSite17Group (asynchronous)</h2>
<p>Tests whether a given sys_id is for a group record that is to be considered a Site 17 group.</p>
<p>AJAX Parameter Name:</p>
<ul style="list-style-position: inside;"><li><code class="language-typescript">&#34;sys_parm_user_group_id&#34;</code> - The SysID of a Group (sys_user_group) record.</li></ul>
<p>Returns string value <code class="language-typescript">&#34;true&#34;</code> if the associated record element is for a Site 17 group; otherwise, <code class="language-typescript">&#34;false&#34;</code>.</p>
<h1 id="callback-function-types">Callback Function Types</h1>
<h2 id="ithrowfunc">IThrowFunc</h2>
<p>Produces an <code class="language-typescript">IteratorResult</code> object when the <code class="language-typescript">Iterator.throw</code> method is invoked on the target <code class="language-typescript">Iterator</code>.</p>
<pre class="language-typescript"><code>&lt;TYield&gt;(e?: any): IteratorResult&lt;TYield&gt;;
    &lt;TYield, TReturn&gt;(e?: any): IteratorResult&lt;TYield, TReturn&gt;;
    &lt;TYield, TReturn, TThis&gt;(this: TThis, e?: any): IteratorResult&lt;TYield, TReturn&gt;;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The type of value yielded by the target <code class="language-typescript">Iterator</code>.</li><li>TReturn (optional, default: <code class="language-typescript">any</code>): The final value type returned by the target <code class="language-typescript">Iterator</code>.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>e</var></strong> (optional): <code class="language-typescript">{(any | undefined)}</code> - An object representing the exception.</li></ul>
<p>Returns the iterator result object representing a yielded value or the end of the iteration.</p>
<h2 id="iiterationpredicate">IIterationPredicate</h2>
<p>Predicate function for testing yielded value from the <code class="language-typescript">Iterator.next</code> method of an <code class="language-typescript">Iterator</code> object, including the arguments that were passed to the <code class="language-typescript">Iterator.next</code> method.</p>
<pre class="language-typescript"><code>&lt;TYield&gt;(value: TYield, ...args: []): boolean;
    &lt;TYield, TNext&gt;(value: TYield, ...args: [] | [TNext]): boolean;
    &lt;TYield, TNext, TThis&gt;(this: TThis, value: TYield, ...args: [] | [TNext]): boolean;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The type of value yielded by the target <code class="language-typescript">Iterator</code>.</li><li><strong><var>TNext</var></strong> (optional): The type of value may be passed to the <code class="language-typescript">Iterator.next</code> method on the target <code class="language-typescript">Iterator</code>.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: TYield - The yielded value.</li><li><strong><var>args</var></strong>: <code class="language-typescript">{(...[] | [TNext])}</code> - The arguments that were passed to the <code class="language-typescript">Iterator.next</code> method.</li></ul>
<p>Returns a value indicating whether the test passed.</p>
<h2 id="iiteratornextcallback">IIteratorNextCallback</h2>
<p>Callback function for processing a yielded value from the <code class="language-typescript">Iterator.next</code> method of an <code class="language-typescript">Iterator</code> object, including the arguments that were passed to the <code class="language-typescript">Iterator.next</code> method.</p>
<pre class="language-typescript"><code>&lt;TYield&gt;(value: TYield, ...args: []): void;
    &lt;TYield, TNext&gt;(value: TYield, ...args: [] | [TNext]): void;
    &lt;TYield, TNext, TThis&gt;(this: TThis, value: TYield, ...args: [] | [TNext]): void;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TYield</var></strong>: The type of value yielded by the target <code class="language-typescript">Iterator</code>.</li><li><strong><var>TNext</var></strong> (optional): The type of value may be passed to the <code class="language-typescript">Iterator.next</code> method on the target <code class="language-typescript">Iterator</code>.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: TYield - The yielded value.</li><li><strong><var>args</var></strong>: <code class="language-typescript">{(...[] | [TNext])}</code> - The arguments that were passed to the <code class="language-typescript">Iterator.next</code> method.</li></ul>
<h2 id="imapfunc">IMapFunc</h2>
<p>Function that converts the yielded value from the <code class="language-typescript">Iterator.next</code> method of an <code class="language-typescript">Iterator</code> object, including the arguments that were passed to the <code class="language-typescript">Iterator.next</code> method.</p>
<pre class="language-typescript"><code>&lt;TInput, TResult&gt;(value: TInput, ...args: []): TResult;
    &lt;TInput, TResult, TNext&gt;(value: TInput, ...args: [] | [TNext]): TResult;
    &lt;TInput, TResult, TNext, TThis&gt;(this: TThis, value: TInput, ...args: [] | [TNext]): TResult;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TInput</var></strong>: The type of value yielded by the target <code class="language-typescript">Iterator</code>.</li><li><strong><var>TResult</var></strong>: The type of converted value.</li><li><strong><var>TNext</var></strong> (optional): The type of value may be passed to the <code class="language-typescript">Iterator.next</code> method on the target <code class="language-typescript">Iterator</code>.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: <code class="language-typescript">{TInput}</code> - The yielded value.</li><li><strong><var>args</var></strong>: <code class="language-typescript">{(...[] | [TNext])}</code> - The arguments that were passed to the <code class="language-typescript">Iterator.next</code> method.</li></ul>
<p>Returns the converted value.</p>
<h2 id="ireducerfunc">IReducerFunc</h2>
<p>Function that calculates an aggregate value from the next input value.</p>
<pre class="language-typescript"><code>&lt;TAcc, TInput&gt;(acc: TAcc, cur: TInput): TAcc;
    &lt;TAcc, TInput, TThis&gt;(this: TThis, acc: TAcc, cur: TInput): TAcc;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>TAcc</var></strong>: The type of aggregated value.</li><li><strong><var>Input</var></strong>: The input value type.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>acc</var></strong>: <code class="language-typescript">{TAcc}</code> - The current aggregated value.</li><li><strong><var>cur</var></strong>: <code class="language-typescript">{TInput}</code> - The next input value.</li></ul>
<p>Returns the accumulated aggregate value.</p>
<h2 id="ipredicate">IPredicate</h2>
<p>Function for testing a value.</p>
<pre class="language-typescript"><code>&lt;T&gt;(value: T): boolean;
    &lt;T, TThis&gt;(this: TThis, value: T): boolean;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li><strong><var>T</var></strong>: The type of value to be tested.</li><li>This (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: <code class="language-typescript">{T}</code> - The value to be tested.</li></ul>
<p>Returns a value indictating whether the test passed.</p>
<h2 id="iiteratorthrowhandler">IIteratorThrowHandler</h2>
<p>Function that produces an optional return value from an error state.</p>
<pre class="language-typescript"><code>(e?: any): IteratorReturnResult&lt;any&gt; | undefined;
    &lt;TReturn&gt;(e?: any): TReturn | undefined;
    &lt;TReturn, TThis&gt;(this: TThis, e?: any): TReturn | undefined;</code></pre>
<p>Generic Types:</p>
<ul style="list-style-position: inside;"><li>TReturn (optional, default: <code class="language-typescript">any</code>): The final value type returned by the target <code class="language-typescript">Iterator</code>.</li><li>TThis (optional, default: <code class="language-typescript">any</code>): The type of object to which the &#39;this&#39; keyword can refer.</li></ul>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>e</var></strong> (optional): <code class="language-typescript">{(any | undefined)}</code> - An object representing the exception.</li></ul>
<p>Returns the optional return value.</p>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Provides schedule availability information and adds schedule entries while avoiding conflicts with other</meta_description>
<number>KB0101005</number>
<published>2022-09-21</published>
<rating/>
<retired/>
<roles/>
<short_description>ReservationScheduler API</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-21 19:20:26</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>f885a24e1b82d510ec0320efe54bcbf6</sys_id>
<sys_mod_count>2</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 20:07:03</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Provides schedule availability information and adds schedule entries while avoiding conflicts with other existing entries.</p>
<div class="mce-toc">
<h2>Table of Contents</h2>
<ul><li><a href="#mcetoc_1gdgqen8m4p" rel="nofollow">Sources</a></li><li><a href="#mcetoc_1gdgqen8m4q" rel="nofollow">Constructor</a></li><li><a href="#mcetoc_1gdgqen8m4r" rel="nofollow">Class Properties</a></li><li><a href="#mcetoc_1gdgqen8m4s" rel="nofollow">Methods</a><br />
<ul><li><a href="#mcetoc_1gdgqen8m4t" rel="nofollow">normalizeDuration</a></li><li><a href="#mcetoc_1gdgqen8m4u" rel="nofollow">getNormalizedDuration</a></li><li><a href="#mcetoc_1gdgqen8m4v" rel="nofollow">normalizeStartDate</a></li><li><a href="#mcetoc_1gdgqen8m50" rel="nofollow">getNormalizedStartDate</a></li><li><a href="#mcetoc_1gdgqen8m51" rel="nofollow">getNextAvailableTimeSpan</a></li><li><a href="#mcetoc_1gdgqen8m52" rel="nofollow">getAvailabilitiesInRange</a></li><li><a href="#mcetoc_1gdgqen8m53" rel="nofollow">isAvailable</a></li><li><a href="#mcetoc_1gdgqen8m54" rel="nofollow">addReservation</a></li><li><a href="#mcetoc_1gdgqen8m55" rel="nofollow">removeReservation</a></li></ul>
</li><li><a href="#mcetoc_1gdgqen8m56" rel="nofollow">ITimeSpan Interface</a><br />
<ul><li><a href="#mcetoc_1gdgqen8m57" rel="nofollow">Interface Properties</a></li></ul>
</li></ul>
</div>
<h1 id="mcetoc_1gdgqen8m4p">Sources</h1>
<ul style="list-style-position: inside;"><li><a title="Script Include" href="/sys_script_include.do?sys_id&#61;ff963f582f05111035be56e62799b643" rel="nofollow">Script Include</a></li><li><a title="TypeScript (GitHub)" href="https://github.com/USASOC-HQ/site_17_server_side/blob/main/source/api/ReservationScheduler.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript (GitHub)</a></li></ul>
<h1 id="mcetoc_1gdgqen8m4q">Constructor</h1>
<p>Creates a new <code class="language-typescript">ReservationScheduler</code> object.</p>
<pre class="language-javascript"><code>new ReservationScheduler(type: reservation_typeGlideRecord | string, allowInactive?: boolean, timeZone?: string): ReservationScheduler;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>type</var></strong>: <code class="language-typescript">{(reservation_typeGlideRecord | string)}</code> - The reservation type record.</li><li><strong><var>allowInactive</var></strong> (optional): <code class="language-typescript">{boolean}</code> - Optionally indicates whether inactive reservation types are allowed. The default is false.</li><li><strong><var>timeZone</var></strong> (optional): <code class="language-typescript">{string}</code> - An optional time zone for the inner scheduler.</li></ul>
<h1 id="mcetoc_1gdgqen8m4r">Class Properties</h1>
<ul style="list-style-position: inside;"><li><strong><var>short_description</var></strong>: <code class="language-typescript">{string}</code> - The short description.</li><li><strong><var>schedule</var></strong>: <code class="language-typescript">{GlideSchedule}</code> - The current inner schedul object.</li><li><strong><var>timeZone</var></strong>: <code class="language-typescript">{string}</code> - The current user&#39;s time zone.</li><li><strong><var>approval_group</var></strong>: <code class="language-typescript">{string | undefined}</code> - The Sys ID of Approval group or undefined to automatically approve reservations or <code class="language-typescript">undefined</code> if there is no approval group. This Refers to a Group ( <code class="language-typescript">sys_user_group</code>).</li><li><strong><var>assignment_group</var></strong>: <code class="language-typescript">{string}</code> - The Sys ID of Default Assignment group. This Refers to a Group ( <code class="language-typescript">sys_user_group</code>).</li><li><strong><var>minimum_duration</var></strong>: <code class="language-typescript">{GlideDuration}</code> - The Minimum Reservation Duration. The minimum value is 1 minute, and values are rounded up to the nearest minute.</li><li><strong><var>maximum_duration</var></strong>: <code class="language-typescript">{GlideDuration}</code> - The maximum reservation duration. This cannot be less than the Minimum Duration, and values are rounded up to the nearest minute.</li><li><strong><var>duration_increment</var></strong>: <code class="language-typescript">{GlideDuration}</code> - The length by which reservation durations can be incremented. The minimum value is 1 minute, and values are rounded up to the nearest minute.</li><li><strong><var>start_time_interval</var></strong>: <code class="language-typescript">{GlideDuration}</code> - The fixed time-of-day interval, relative to midnight, for reservation start times. This is the interval at which reservations must be scheduled. The minimum value is 1 minute, and values are rounded up to the nearest minute.</li></ul>
<h1 id="mcetoc_1gdgqen8m4s">Methods</h1>
<h2 id="mcetoc_1gdgqen8m4t">normalizeDuration</h2>
<p>Normalizes a duration value according to the <code class="language-typescript">duration_increment</code>, <code class="language-typescript">minimum_duration</code> and <code class="language-typescript">maximum_duration</code> properties.</p>
<pre class="language-javascript"><code>normalizeDuration(value: GlideDuration, round?: number): number;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: <code class="language-typescript">{GlideDuration}</code> - The duration value to normalize.</li><li><strong><var>round</var></strong> (optional): <code class="language-typescript">{number}</code> - Rounding type: Greater than zero &#61; round to next higher <code class="language-typescript">duration_increment</code> (default);<br />Less than 0 &#61; round to next lower <code class="language-typescript">duration_increment</code>;<br />0 &#61; round to nearest <code class="language-typescript">duration_increment</code>.</li></ul>
<p>Returns the number of milliseconds by which the duration value was adjusted.</p>
<h2 id="mcetoc_1gdgqen8m4u">getNormalizedDuration</h2>
<p>Creates a new normalized duration value from an existing duration value.</p>
<pre class="language-javascript"><code>getNormalizedDuration(value: GlideDuration, round?: number): GlideDuration;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: <code class="language-typescript">{GlideDuration}</code> - The source duration value.</li><li><strong><var>round</var></strong> (optional): <code class="language-typescript">{number}</code> - Greater than zero &#61; round to next higher <code class="language-typescript">duration_increment</code> (default);<br />Less than 0 &#61; round to next lower <code class="language-typescript">duration_increment</code>;<br />0 &#61; round to nearest <code class="language-typescript">duration_increment</code>.</li></ul>
<p>Returns a new normalized duration value.</p>
<h2 id="mcetoc_1gdgqen8m4v">normalizeStartDate</h2>
<p>Rounds a date/time value up to the next increment specified by the <code class="language-typescript">start_time_interval</code> property.</p>
<pre class="language-javascript"><code>normalizeStartDate(value: GlideDateTime): number;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The date/time value to normalize.</li></ul>
<p>Returns the number of milliseconds by which the duration value was adjusted.</p>
<h2 id="mcetoc_1gdgqen8m50">getNormalizedStartDate</h2>
<p>Creates a new normalizated date/time value from an existing date and time.</p>
<pre class="language-javascript"><code>getNormalizedStartDate(value: GlideDateTime): GlideDateTime;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>value</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The source date/time value.</li></ul>
<p>Returns a new date/time value that is rouned up to the next increment specified by the <code class="language-typescript">start_time_interval</code> property.</p>
<h2 id="mcetoc_1gdgqen8m51">getNextAvailableTimeSpan</h2>
<p>Gets the timespan of the next availability from the current <code class="language-typescript">GlideSchedule</code>.</p>
<pre class="language-javascript"><code>getNextAvailableTimeSpan(fromDateTime: GlideDateTime, toDateTime: GlideDateTime, minimumDuration?: GlideDuration): ITimeSpan | undefined;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>fromDateTime</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The starting date/time (inclusive).</li><li><strong><var>toDateTime</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The ending date/time (exclusive).</li><li><strong><var>minimumDuration</var></strong> (optional): <code class="language-typescript">{GlideDuration}</code> - The optional minimum duration.</li></ul>
<p>Returns the next available <a href="#mcetoc_1gdgqen8m56" rel="nofollow">time span</a> or <code class="language-typescript">undefined</code> if there are not availabilities in the given time span.</p>
<h2 id="mcetoc_1gdgqen8m52">getAvailabilitiesInRange</h2>
<p>Gets the available time slots within a given range of date/time values.</p>
<pre class="language-javascript"><code>getAvailabilitiesInRange(fromDateTime: GlideDateTime, toDateTime: GlideDateTime, minimumDuration?: GlideDuration): Iterator&lt;ITimeSpan&gt;;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>fromDateTime</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The starting date/time range.</li><li><strong><var>toDateTime</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The ending date/time range.</li><li><strong><var>minimumDuration</var></strong> (optional): <code class="language-typescript">{GlideDuration}</code> - The optional minimum duration for the returned time slots.</li></ul>
<p>Returns the available <a href="#mcetoc_1gdgqen8m56" rel="nofollow">time spans</a> within the specified date/time range.</p>
<h2 id="mcetoc_1gdgqen8m53">isAvailable</h2>
<p>Indicates whether the specified start date and duration is available for an reservation.</p>
<pre class="language-javascript"><code>isAvailable(startDateTime: GlideDateTime, duration: GlideDuration): boolean;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>startDateTime</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The prospective reservation start date and time.</li><li><strong><var>duration</var></strong>: <code class="language-typescript">{GlideDuration}</code> - The duration of the prospective reservation.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the specified date/time and duration is available for reservation; otherwise, <code class="language-typescript">false</code>.</p>
<h2 id="mcetoc_1gdgqen8m54">addReservation</h2>
<p>Adds a reservation to the associated schedule.</p>
<pre class="language-javascript"><code>addReservation(name: string, startDateTime: GlideDateTime, duration: GlideDuration, group_id?: string, user_id?: string): cmn_schedule_spanGlideRecord | undefined;</code></pre>
<p>Arguments:</p>
<ul style="list-style-position: inside;"><li><strong><var>name</var></strong>: <code class="language-typescript">{string}</code> - The name to assign to the reservation.</li><li><strong><var>startDateTime</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The start date and time of the reservation.</li><li><strong><var>duration</var></strong>: <code class="language-typescript">{string}</code> - The duration of the reservation.</li><li><strong><var>group_id</var></strong> (optional): <code class="language-typescript">{GlideDuration}</code> - The optional sys_id of the associated sys_user_group.</li><li><strong><var>user_id</var></strong> (optional): <code class="language-typescript">{GlideDuration}</code> - The optional sys_id of the associated user.</li></ul>
<p>Returns the <code class="language-typescript">cmn_schedule_spanGlideRecord</code> representing the reservation or <code class="language-typescript">undefined</code> if the specified date/time and duration was not available.</p>
<h2 id="mcetoc_1gdgqen8m55">removeReservation</h2>
<p>Removes a reservation (schedule entry) from the associated schedule</p>
<pre class="language-javascript"><code>removeReservation(reservation: string | cmn_schedule_spanElement | cmn_schedule_spanGlideRecord): boolean;</code></pre>
<p>Argument:</p>
<ul style="list-style-position: inside;"><li><strong><var>reservation</var></strong>: <code class="language-typescript">{(string | cmn_schedule_spanElement | cmn_schedule_spanGlideRecord)}</code> - The Sys ID or record representing the schedule entry.</li></ul>
<p>Returns <code class="language-typescript">true</code> if the schedule entry was removed; otherwise, <code class="language-typescript">false</code>.</p>
<h1 id="mcetoc_1gdgqen8m56">ITimeSpan Interface</h1>
<p>Represents an availability time span.</p>
<h2 id="mcetoc_1gdgqen8m57">Interface Properties</h2>
<ul style="list-style-position: inside;"><li><strong><var>start</var></strong>: <code class="language-typescript">{GlideDateTime}</code> - The start date and time.</li><li><strong><var>duration</var></strong>: <code class="language-typescript">{GlideDuration}</code> &#61; The duration of the time span.</li></ul>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Following are links to resources that were used frequently for ServiceNow support and development: Technology</meta_description>
<number>KB0101003</number>
<published>2022-09-20</published>
<rating/>
<retired/>
<roles/>
<short_description>ServiceNow Development References and Links</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-20 18:10:01</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>c0fd45751b8a55101497a820f54bcb70</sys_id>
<sys_mod_count>2</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-20 18:37:55</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<p>Following are links to resources that were used frequently for ServiceNow support and development:</p>
<h2>Technology Websites</h2>
<ul><li><a title="Visual Studio Code" href="https://code.visualstudio.com/docs" rel="nofollow">Visual Studio Code</a> - IDE for editing and building source code.</li><li><a title="Node Package Manager" href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer nofollow">Node Package Manager</a> - Manages software package dependencies.</li><li><a title="TypeScript" href="https://www.typescriptlang.org" target="_blank" rel="noopener noreferrer nofollow">TypeScript</a> - Strongly-type language for generating JavaScript code.</li><li><a title="JsDoc" href="https://devdocs.io/jsdoc/" target="_blank" rel="noopener noreferrer nofollow">JsDoc</a> - Describes common convention for providing inline documentation for JavaScript and TypeScript.</li></ul>
<h2>ServiceNow Websites</h2>
<ul><li><a href="https://developer.servicenow.com/" rel="nofollow">ServiceNow Developers Website</a></li><li><a href="https://docs.servicenow.com/" rel="nofollow">ServiceNow Product Documentation</a></li><li><a href="https://community.servicenow.com/" rel="nofollow">ServiceNow Community Website</a></li><li><a href="https://nowlearning.service-now.com/" rel="nofollow">Now Learning</a></li><li><a href="https://hiwave.servicenowservices.com/" target="_blank" rel="noopener noreferrer nofollow">ServiceNow Customer Service System (HIWAVE)</a></li></ul>
<h2>Source Code Repository Sites</h2>
<ul style="list-style-position: inside;"><li><a href="https://github.com/USASOC-HQ" rel="nofollow">USASOC-HQ GitHub Organization</a> - This is the shared GitHub profile for USASOC-HQ development.</li><li><a title="Work GitHub Profile for Leonard Erwine" href="https://github.com/erwinel" target="_blank" rel="noopener noreferrer nofollow">Work GitHub Profile for Leonard Erwine</a> - This contains repositories that were created before the USASOC-HQ Organization profile was created in GitHub.</li><li><a title="Personal GitHub Profile for Leonard Erwine" href="https://github.com/lerwine" target="_blank" rel="noopener noreferrer nofollow">Personal GitHub Profile for Leonard Erwine</a> - This contains repositories that were created independent of work activities.</li></ul>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<kb_knowledge action="INSERT_OR_UPDATE">
<active>true</active>
<article_type>text</article_type>
<author display_value="Leonard Erwine">47954a0edbdc3300b53f341f7c9619f4</author>
<can_read_user_criteria/>
<cannot_read_user_criteria/>
<category/>
<cmdb_ci display_value=""/>
<description/>
<direct>false</direct>
<disable_commenting>false</disable_commenting>
<disable_suggesting>false</disable_suggesting>
<display_attachments>false</display_attachments>
<flagged>false</flagged>
<image/>
<kb_category display_value=""/>
<kb_knowledge_base display_value="Site 17 - IT Support">63250be7cdaa0d106b60cc11280a9de6</kb_knowledge_base>
<meta/>
<meta_description>Purpose To mitigate the risk of record number overlaps between 2 ServiceNow instances. ServiceNow instances</meta_description>
<number>KB0101001</number>
<published>2022-09-20</published>
<rating/>
<retired/>
<roles/>
<short_description>Migrating sequentially numbered records (i.e. KB articles) to another instance</short_description>
<source display_value=""/>
<sys_class_name>kb_knowledge</sys_class_name>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-20 15:45:19</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>cfae5cf11b4a55101497a820f54bcbbe</sys_id>
<sys_mod_count>8</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-21 17:35:03</sys_updated_on>
<sys_view_count>1</sys_view_count>
<taxonomy_topic display_value=""/>
<text><![CDATA[<h1>Purpose</h1>
<p>To mitigate the risk of record number overlaps between 2 ServiceNow instances.</p>
<p>ServiceNow instances track number sequencing for records independent of one another. When a sequentially-numbered record is created on one instance and then copied to another, there is a risk of the imported record having the same number as an existing record. This explains a way to manually ensure this does not happen.</p>
<p>An example use case would be when migrating a KB article from a ServiceNow instance on an unclassified network to an instance on a classified network that is not connected to the internet.</p>
<h1>Assumptions / Pre-requisites</h1>
<ul style="list-style-position: inside;"><li>You have already created the record(s) that you wish to migrate.</li><li>You understand what, if any, related records that will need to be included with the target record.</li><li>You have administrative access on the source ServiceNow instance and are able to run a background script.</li><li>You have a basic understanding of exporting and importing records.</li><li>You are able to create new records on the target system.</li></ul>
<h1>Steps</h1>
<p>In the following instructions, the term &#34;Source instance&#34; refers to the ServiceNow instance that contains the record you wish to export and &#34;Target instance&#34; refers to the ServiceNow instance you will be importing the record into.</p>
<ol style="list-style-position: inside;"><li><strong>Reserve the next sequential number.</strong> Open up a new record form on the target instance, but do not modify any fields and <strong>do not save changes</strong>.<br />
<ul style="list-style-position: inside;"><li>Make a note of the record number that was generated (i.e. <code>KB0010514</code>).</li><li>When the edit form is loaded, ServiceNow allocates the next sequential record number. If you don&#39;t save the new record, then that number will remain unused.</li></ul>
<em><strong>Note:</strong> Make sure you are opening the actual new record edit form. For instance, if you are trying to create a new record from a service catalog link using a record producer, the sequential number may not be allocated as expected.</em></li><li>Open the existing record on the source instance and copy the sys_id using the record menu.<br /><img style="align: baseline;" title="" src="sys_attachment.do?sys_id&#61;b9ede8f11b4a55101497a820f54bcb33" alt="" width="159" height="234" align="baseline" border="" hspace="" vspace="" /></li><li><strong> Get table name.</strong> Make a note of the programmatic table name for the record type.<br />
<ul style="list-style-position: inside;"><li><strong>From the URL:</strong> If you can interpret web browser URLs, the programmatic name of the table may be part of the URL. <br />For instance, in the following URL string portion, the table name is kb_knowledge: <br /><code><span style="color: #999999;">https://inscomscd.servicenowservices.com</span><span style="color: #993300;">/nav_to.do</span><span style="color: #008000;">?uri&#61;</span><span style="color: #808000;">%2F</span><strong>kb_knowledge</strong>.do<span style="color: #808000;">%3F</span>sys_id<span style="color: #808000;">%3D</span>cfae5cf11b</code><span style="color: #999999;">…</span></li><li><strong>From Table Configuration:</strong> From the form menu, select Collection ⇒ Table. The programmatic name of the table will be in the &#34;name&#34; field.</li></ul>
</li><li><strong>Change record number using a background script.</strong> Open a background script window and use the following template for the script to execute.<br />
<pre class="language-javascript"><code>var gr &#61; new GlideRecord(&#34;table_name&#34;);
if (gr.get(&#34;sys_id&#34;)) {
    gr.number &#61; &#34;new_number&#34;;
    gr.update();
}
else
    gs.error(&#34;Record not found.&#34;);</code></pre>
For instance, if you are changing the number of a KB article the script would look something similar to:
<pre class="language-javascript"><code>var gr &#61; new GlideRecord(&#34;kb_knowledge&#34;);
if (gr.get(&#34;797ba49c6823481c80b3477ef8331741&#34;)) {
    gr.number &#61; &#34;KB0104231&#34;;
    gr.update();
}
else
    gs.error(&#34;Record not found.&#34;);</code></pre>
</li></ol>]]></text>
<topic>General</topic>
<use_count>0</use_count>
<valid_to>2100-01-01</valid_to>
<wiki/>
<workflow_state>published</workflow_state>
</kb_knowledge>
<sys_attachment action="INSERT_OR_UPDATE">
<average_image_color>#eef0ed</average_image_color>
<chunk_size_bytes>700000</chunk_size_bytes>
<compressed>true</compressed>
<content_type>image/png</content_type>
<encryption_context display_value=""/>
<file_name>FormMenu.png</file_name>
<hash>6d643656f09d701b5cee4c9715393988d1a3576ba39990bc292214e20cab4005</hash>
<image_height>234</image_height>
<image_width>159</image_width>
<size_bytes>14424</size_bytes>
<size_compressed>14249</size_compressed>
<state>available</state>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-20 15:49:43</sys_created_on>
<sys_id>b9ede8f11b4a55101497a820f54bcb33</sys_id>
<sys_mod_count>3</sys_mod_count>
<sys_updated_by>erwinel_da</sys_updated_by>
<sys_updated_on>2022-09-20 15:49:43</sys_updated_on>
<table_name>kb_knowledge</table_name>
<table_sys_id>cfae5cf11b4a55101497a820f54bcbbe</table_sys_id>
</sys_attachment>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data>H4sIAAAAAAAAAA==</data>
<length>16</length>
<position>0</position>
<sys_attachment display_value="FormMenu.png" sys_id="b9ede8f11b4a55101497a820f54bcb33">b9ede8f11b4a55101497a820f54bcb33</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-20 15:49:43</sys_created_on>
<sys_id>f9ede8f11b4a55101497a820f54bcb33</sys_id>
</sys_attachment_doc>
<sys_attachment_doc action="INSERT_OR_UPDATE">
<data></data>
<length>18988</length>
<position>1</position>
<sys_attachment display_value="FormMenu.png" sys_id="b9ede8f11b4a55101497a820f54bcb33">b9ede8f11b4a55101497a820f54bcb33</sys_attachment>
<sys_created_by>erwinel_da</sys_created_by>
<sys_created_on>2022-09-20 15:49:43</sys_created_on>
<sys_id>7dede8f11b4a55101497a820f54bcb33</sys_id>
</sys_attachment_doc>
</unload>
